scale_color_discrete(name='Monotributo')
jsonAUHSMVM <- fromJSON(url)
datos <- jsonAUHSMVM$data  %>% as.data.frame()
colnames(datos) = c('Fecha',
'AUH',# Asignación universal por hije
'SMVM',# Salario mínimo vital y movil
'IPC', # Indice Precios al Consumidor
'TIA_CE', # Trabajadorxs independientes Autonomxs con estacionalidad
'TIMS_CE') # Trabajadorxs independientes con monotributo social con estacionalidad
datos %>% na.omit %>% glimpse
datos %>%
mutate(
Fecha = as.Date(Fecha),
AUH = as.numeric(AUH),
SMVM = as.numeric(SMVM),
IPC = as.numeric(IPC),
TIA_CE = as.numeric(TIA_CE),
TIMS_CE = as.numeric(TIMS_CE)
) %>%
mutate(deflactor = first(na.omit(IPC))/IPC) %>%
mutate(SSC = SMVM/2) ->
datos
datos %>% na.omit %>% glimpse
datos %>%
ggplot( aes( x = Fecha, y = AUH)) +
geom_line()
datos %>%
ggplot( aes( x = Fecha, y = AUH*deflactor)) +
geom_line() +
xlim(as.Date(c('2016-12-01','2022-01-01')))
datos %>%
ggplot( aes( x = Fecha, y = SSC*deflactor)) +
geom_line() +
xlim(as.Date(c('2016-12-01','2022-01-01')))
datos %>%
ggplot( aes( x = Fecha)) +
geom_line(aes(y = SSC*deflactor, color='SSC')) +
geom_line(aes(y = AUH*deflactor, color='AUH')) +
xlim(as.Date(c('2016-12-01','2022-01-01'))) +
ylab('Monto [Pesos en términos reales]') +
theme(legend.position = c(.9,.9)) +
scale_color_discrete(name='Asistencia social')
datos %>%
ggplot( aes( x = Fecha)) +
geom_line(aes(y = TIA_CE, color='Total')) +
geom_line(aes(y = TIAMS_CE, color='Con MS')) +
xlim(as.Date(c('2011-12-01','2022-01-01'))) +
ylab('Miles de personas') +
theme(legend.position = c(.6,.1)) +
scale_color_discrete(name='Monotributo')
datos %>%
ggplot( aes( x = Fecha)) +
geom_line(aes(y = TIA_CE, color='Autonomxs')) +
geom_line(aes(y = TIMS_CE, color='Con MS')) +
xlim(as.Date(c('2011-12-01','2022-01-01'))) +
ylab('Miles de personas') +
theme(legend.position = c(.6,.1)) +
scale_color_discrete(name='Monotributo')
print(Sys.time())
print(Sys.time() %>% format('%H:%M%'))
shiny::runApp('LABURO/taller de datos populares/EPH/EPH/tablero_prototipo2')
require(igraph)
require(tidyverse)
Ntry <- 100
N <- 34
f <- 0.9
df <- lapply(seq(0,1,.1),function(f){
M <- round(N*(N-1)/2 * f)
df <- lapply(1:Ntry,function(intento){
G <- sample_gnm(n = N,m = M)
df <- combn(1:N,2,simplify=FALSE) %>% do.call(rbind,.) %>% as.data.frame()
df %>% mutate(MC = sapply(1:nrow(df),function(i) min_cut(G,df$V1[i],df$V2[i]))) -> df
df %>% mutate(V1 = V2, V2= V1) %>% bind_rows(df) %>% group_by(V1) %>% summarise(mMC = mean(MC)) %>% mutate(k = degree(G,V1)) -> df
return(df %>% mutate(intento = intento))
}) %>% bind_rows() %>% mutate(M=M)
}) %>% bind_rows()
df %>%
group_by(M,intento) %>%
mutate(knorm = (k-min(k))/(max(k)-min(k)),
mMCnorm = (mMC-min(mMC))/(max(mMC)-min(mMC)) ) %>%
ggplot(aes(x=knorm,y=mMCnorm,group=M,color=M)) +
geom_point(size=.01) +
geom_smooth(lwd=.5) +
scale_color_continuous(low='blue',high='red') +
theme(legend.position = c(.8,.2))
Ntry <- 100
N <- 34
df2 <- lapply(1:10,function(m){
df2 <- lapply(1:Ntry,function(intento){
G <- sample_growing(n = N,m = m,directed = FALSE)
df2 <- combn(1:N,2,simplify=FALSE) %>% do.call(rbind,.) %>% as.data.frame()
df2 %>% mutate(MC = sapply(1:nrow(df2),function(i) min_cut(G,df2$V1[i],df2$V2[i]))) -> df2
df2 %>% mutate(V1 = V2, V2= V1) %>% bind_rows(df2) %>% group_by(V1) %>% summarise(mMC = mean(MC)) %>% mutate(k = degree(G,V1), M = ecount(G)) -> df2
return(df2 %>% mutate(intento = intento))
}) %>% bind_rows() %>% mutate(m=m)
}) %>% bind_rows()
df3 <- lapply(1:10,function(m){
df3 <- lapply(1:Ntry,function(intento){
G <- sample_growing(n = N,m = m,directed = FALSE,citation = FALSE)
df3 <- combn(1:N,2,simplify=FALSE) %>% do.call(rbind,.) %>% as.data.frame()
df3 %>% mutate(MC = sapply(1:nrow(df3),function(i) min_cut(G,df3$V1[i],df3$V2[i]))) -> df3
df3 %>% mutate(V1 = V2, V2= V1) %>% bind_rows(df3) %>% group_by(V1) %>% summarise(mMC = mean(MC)) %>% mutate(k = degree(G,V1), M = ecount(G)) -> df3
return(df3 %>% mutate(intento = intento))
}) %>% bind_rows() %>% mutate(m=m)
}) %>% bind_rows()
df3
bind_rows(
df %>% mutate(tipo = 'azar'),
df2 %>% mutate(tipo = 'pa'),
df3 %>% mutate(tipo = 'pa2')
)
bind_rows(
df %>% mutate(tipo = 'azar'),
df2 %>% mutate(tipo = 'pa'),
df3 %>% mutate(tipo = 'pa2')
) %>% glimpse
bind_rows(
df %>% mutate(tipo = 'azar'),
df2 %>% mutate(tipo = 'pa'),
df3 %>% mutate(tipo = 'pa2')
) %>% select(tipo) %>% unique
bind_rows(
df %>% mutate(tipo = 'azar'),
df2 %>% mutate(tipo = 'pa'),
df3 %>% mutate(tipo = 'pa2')
) %>%
group_by(M,intento,tipo) %>%
mutate(knorm = (k-min(k))/(max(k)-min(k)),
mMCnorm = (mMC-min(mMC))/(max(mMC)-min(mMC)) ) %>%
ggplot(aes(x=knorm,y=mMCnorm,group=M,color=tipo)) +
#geom_point(size=.01,alpha=.1) +
geom_smooth(lwd=.5) +
#scale_color_continuous(low='blue',high='red') +
theme(legend.position = c(.8,.2))
bind_rows(
df %>% mutate(tipo = 'azar'),
df2 %>% mutate(tipo = 'pa'),
df3 %>% mutate(tipo = 'pa2')
) %>%
group_by(M,intento,tipo) %>%
mutate(knorm = (k-min(k))/(max(k)-min(k)),
mMCnorm = (mMC-min(mMC))/(max(mMC)-min(mMC)) ) -> dfFull
dfFull$tipo %>% table
dfFull %>%
ggplot(aes(x=knorm,y=mMCnorm,color=tipo)) +
#geom_point(size=.01,alpha=.1) +
geom_smooth(lwd=.5) +
#scale_color_continuous(low='blue',high='red') +
theme(legend.position = c(.8,.2))
dfFull %>%
ggplot(aes(x=knorm,y=mMCnorm,color=tipo,group=M)) +
#geom_point(size=.01,alpha=.1) +
geom_smooth(lwd=.5) +
#scale_color_continuous(low='blue',high='red') +
theme(legend.position = c(.8,.2))
dfFull %>%
ggplot(aes(x=knorm,y=mMCnorm,group=M)) +
#geom_point(size=.01,alpha=.1) +
geom_smooth(aes(color=tipo),lwd=.5) +
#scale_color_continuous(low='blue',high='red') +
theme(legend.position = c(.8,.2))
dfFull %>%
ggplot(aes(x=knorm,y=mMCnorm,group=M)) +
#geom_point(size=.01,alpha=.1) +
geom_smooth(aes(color=tipo),lwd=.5) +
#scale_color_continuous(low='blue',high='red') +
scale_color_discrete(values=c('azar','pa','pa2')) +
theme(legend.position = c(.8,.2))
dfFull %>%
ggplot(aes(x=knorm,y=mMCnorm,group=M)) +
#geom_point(size=.01,alpha=.1) +
geom_smooth(aes(color=tipo),lwd=.5) +
#scale_color_continuous(low='blue',high='red') +
scale_color_manual(values=c('azar','pa','pa2')) +
theme(legend.position = c(.8,.2))
?scale_color_discrete
dfFull %>%
ggplot(aes(x=knorm,y=mMCnorm,group=M)) +
#geom_point(size=.01,alpha=.1) +
geom_smooth(aes(color=tipo),lwd=.5) +
#scale_color_continuous(low='blue',high='red') +
scale_color_discrete(type=c('azar'='red','pa'='blue','pa2'='green')) +
theme(legend.position = c(.8,.2))
?geom_line
dfFull %>%
ggplot(aes(x=knorm,y=mMCnorm,group=M,linetype=tipo)) +
#geom_point(size=.01,alpha=.1) +
geom_smooth(lwd=.5) +
#scale_color_continuous(low='blue',high='red') +
scale_color_discrete(type=c('azar'='red','pa'='blue','pa2'='green')) +
theme(legend.position = c(.8,.2))
dfFull %>%
ggplot(aes(x=knorm,y=mMCnorm,color=M,linetype=tipo)) +
#geom_point(size=.01,alpha=.1) +
geom_smooth(lwd=.5) +
#scale_color_continuous(low='blue',high='red') +
scale_color_discrete(type=c('azar'='red','pa'='blue','pa2'='green')) +
theme(legend.position = c(.8,.2))
ggplot() +
{
geom_smooth(
data=dfFull %>% filter(tipo == 'azar'),
aes(x=knorm,y=mMCnorm,group=M,color='red'))
}
ggplot() +
{
geom_smooth(
data=dfFull %>% filter(tipo == 'azar'),
aes(x=knorm,y=mMCnorm,group=M,color='red'))
} +
{
geom_smooth(
data=dfFull %>% filter(tipo == 'pa'),
aes(x=knorm,y=mMCnorm,group=M,color='blue'))
} +
{
geom_smooth(
data=dfFull %>% filter(tipo == 'pa2'),
aes(x=knorm,y=mMCnorm,group=M,color='skyblue'))
}
geom_smooth(
data=dfFull %>% filter(tipo == 'azar'),
aes(x=knorm,y=mMCnorm,group=M),color='red')
ggplot() +
{
geom_smooth(
data=dfFull %>% filter(tipo == 'azar'),
aes(x=knorm,y=mMCnorm,group=M),color='red')
} +
{
geom_smooth(
data=dfFull %>% filter(tipo == 'pa'),
aes(x=knorm,y=mMCnorm,group=M),color='blue')
} +
{
geom_smooth(
data=dfFull %>% filter(tipo == 'pa2'),
aes(x=knorm,y=mMCnorm,group=M),color='skyblue')
}
?sample_smallworld
sample_smallworld(1,1,1,0) %>% plot
sample_smallworld(2,1,1,0) %>% plot
sample_smallworld(2,2,1,0) %>% plot
sample_smallworld(1,2,1,0) %>% plot
sample_smallworld(2,2,1,0) %>% plot
sample_smallworld(2,2,2,0) %>% plot
sample_smallworld(3,2,2,0) %>% plot
sample_smallworld(3,1,1,0) %>% plot
sample_smallworld(3,2,1,0) %>% plot
sample_smallworld(2,3,1,0) %>% plot
sample_smallworld(1,3,1,0) %>% plot
sample_smallworld(1,34,1,0) %>% plot
sample_smallworld(1,34,2,0) %>% plot
sample_smallworld(1,4,2,0) %>% plot
sample_smallworld(1,10,2,0) %>% plot
sample_smallworld(1,10,3,0) %>% plot
sample_smallworld(1,10,4,0) %>% plot
sample_smallworld(2,10,4,0) %>% plot
sample_smallworld(1,34,4,0) %>% plot
sample_smallworld(1,34,34,0) %>% plot
sample_smallworld(1,34,35,0) %>% plot
sample_smallworld(1,34,100,0) %>% plot
sample_smallworld(1,34,100,0)
sample_smallworld(1,34,100,0) %>% vcount()
sample_smallworld(1,34,100,0) %>% ecount()
sample_smallworld(1,34,34,0) %>% ecount()
sample_smallworld(1,34,35,0) %>% ecount()
df4 <- lapply(1:34,function(m){
df4 <- lapply(1:Ntry,function(intento){
G <- sample_smallworld(dim = 1,size = N,nei = m,p=0)
df4 <- combn(1:N,2,simplify=FALSE) %>% do.call(rbind,.) %>% as.data.frame()
df4 %>% mutate(MC = sapply(1:nrow(df4),function(i) min_cut(G,df4$V1[i],df4$V2[i]))) -> df4
df4 %>% mutate(V1 = V2, V2= V1) %>% bind_rows(df4) %>% group_by(V1) %>% summarise(mMC = mean(MC)) %>% mutate(k = degree(G,V1), M = ecount(G)) -> df4
return(df4 %>% mutate(intento = intento))
}) %>% bind_rows() %>% mutate(m=m)
}) %>% bind_rows()
df %>%
group_by(M,intento) %>%
mutate(knorm = (k-min(k))/(max(k)-min(k)),
mMCnorm = (mMC-min(mMC))/(max(mMC)-min(mMC))) %>%
ggplot(aes(x=knorm,y=mMCnorm,color=M)) +
geom_smooth()
df %>%
group_by(M,intento) %>%
mutate(knorm = (k-min(k))/(max(k)-min(k)),
mMCnorm = (mMC-min(mMC))/(max(mMC)-min(mMC)))
df %>%
group_by(M,intento) %>%
mutate(knorm = (k-min(k))/(max(k)-min(k)),
mMCnorm = (mMC-min(mMC))/(max(mMC)-min(mMC))) %>% filter(M>0)
df4 %>%
group_by(M,intento) %>%
mutate(knorm = (k-min(k))/(max(k)-min(k)),
mMCnorm = (mMC-min(mMC))/(max(mMC)-min(mMC))) %>%
ggplot(aes(x=knorm,y=mMCnorm,color=M)) +
geom_smooth()
df4 %>%
group_by(M,intento) %>%
mutate(knorm = (k-min(k))/(max(k)-min(k)),
mMCnorm = (mMC-min(mMC))/(max(mMC)-min(mMC))) %>%
df4 %>%
group_by(M,intento) %>%
mutate(knorm = (k-min(k))/(max(k)-min(k)),
mMCnorm = (mMC-min(mMC))/(max(mMC)-min(mMC)))
df4 <- lapply(1:34,function(m){
df4 <- lapply(1:Ntry,function(intento){
G <- sample_smallworld(dim = 1,size = N,nei = m,p=0.5)
df4 <- combn(1:N,2,simplify=FALSE) %>% do.call(rbind,.) %>% as.data.frame()
df4 %>% mutate(MC = sapply(1:nrow(df4),function(i) min_cut(G,df4$V1[i],df4$V2[i]))) -> df4
df4 %>% mutate(V1 = V2, V2= V1) %>% bind_rows(df4) %>% group_by(V1) %>% summarise(mMC = mean(MC)) %>% mutate(k = degree(G,V1), M = ecount(G)) -> df4
return(df4 %>% mutate(intento = intento))
}) %>% bind_rows() %>% mutate(m=m)
}) %>% bind_rows()
df4 %>%
group_by(M,intento) %>%
mutate(knorm = (k-min(k))/(max(k)-min(k)),
mMCnorm = (mMC-min(mMC))/(max(mMC)-min(mMC))) %>%
ggplot(aes(x=knorm,y=mMCnorm,color=M)) +
geom_smooth()
bind_rows(
df %>% mutate(tipo = 'azar'),
df2 %>% mutate(tipo = 'pa'),
df3 %>% mutate(tipo = 'pa2'),
df4 %>% mutate(tipo = 'SW')
) %>%
group_by(M,intento,tipo) %>%
mutate(knorm = (k-min(k))/(max(k)-min(k)),
mMCnorm = (mMC-min(mMC))/(max(mMC)-min(mMC)) ) -> dfFull
geom_smooth(
data=dfFull %>% filter(tipo == 'SW'),
aes(x=knorm,y=mMCnorm,group=M),color='green')
ggplot() +
{
geom_smooth(
data=dfFull %>% filter(tipo == 'azar'),
aes(x=knorm,y=mMCnorm,group=M),color='red')
} +
{
geom_smooth(
data=dfFull %>% filter(tipo == 'pa'),
aes(x=knorm,y=mMCnorm,group=M),color='blue')
} +
{
geom_smooth(
data=dfFull %>% filter(tipo == 'pa2'),
aes(x=knorm,y=mMCnorm,group=M),color='skyblue')
} +
{
geom_smooth(
data=dfFull %>% filter(tipo == 'SW'),
aes(x=knorm,y=mMCnorm,group=M),color='green')
}
ggplot(lwd=.1) +
{
geom_smooth(
data=dfFull %>% filter(tipo == 'azar'),
aes(x=knorm,y=mMCnorm,group=M),color='red')
} +
{
geom_smooth(
data=dfFull %>% filter(tipo == 'pa'),
aes(x=knorm,y=mMCnorm,group=M),color='blue')
} +
{
geom_smooth(
data=dfFull %>% filter(tipo == 'pa2'),
aes(x=knorm,y=mMCnorm,group=M),color='skyblue')
} +
{
geom_smooth(
data=dfFull %>% filter(tipo == 'SW'),
aes(x=knorm,y=mMCnorm,group=M),color='green')
}
ggplot() +
{
geom_smooth(
data=dfFull %>% filter(tipo == 'azar'),
aes(x=knorm,y=mMCnorm,group=M),color='red',lwd=.1)
} +
{
geom_smooth(
data=dfFull %>% filter(tipo == 'pa'),
aes(x=knorm,y=mMCnorm,group=M),color='blue',lwd=.1)
} +
{
geom_smooth(
data=dfFull %>% filter(tipo == 'pa2'),
aes(x=knorm,y=mMCnorm,group=M),color='skyblue',lwd=.1)
} +
{
geom_smooth(
data=dfFull %>% filter(tipo == 'SW'),
aes(x=knorm,y=mMCnorm,group=M),color='green',lwd=.1)
}
df5 <- lapply(seq(0,1,.1),function(f){
df5 <- lapply(1:Ntry,function(intento){
G <- sample_smallworld(dim = 1,size = N,nei = N/3,p=f)
df5 <- combn(1:N,2,simplify=FALSE) %>% do.call(rbind,.) %>% as.data.frame()
df5 %>% mutate(MC = sapply(1:nrow(df5),function(i) min_cut(G,df5$V1[i],df5$V2[i]))) -> df5
df5 %>% mutate(V1 = V2, V2= V1) %>% bind_rows(df5) %>% group_by(V1) %>% summarise(mMC = mean(MC)) %>% mutate(k = degree(G,V1), M = ecount(G)) -> df5
return(df5 %>% mutate(intento = intento))
}) %>% bind_rows() %>% mutate(p=f)
}) %>% bind_rows()
require(igraph)
require(tidyverse)
require(igraphdata)
data("karate")
G <- karate
rm(karate)
df <- combn(1:vcount(G),2) %>% t %>% as.data.frame()
colnames(df) <- c('A1','A2')
df %>% head
df$mincut <- sapply(1:nrow(df),function(i) min_cut(graph = G,source = df$A1[i],target = df$A2[i]))
df$mincut
df
require(igraph)
require(tidyverse)
require(igraphdata)
data("karate")
G <- karate
rm(karate)
df %>%
mutate(k1 = degree(G,A1)) %>%
mutate(k2 = degree(G,A2)) %>%
group_by(A1,A2) %>%
mutate(cota = min(k1,k2)) %>%
ungroup() %>%
ggplot(aes(x=mincut,y=cota)) +
geom_point()
df %>%
mutate(k1 = degree(G,A1)) %>%
mutate(k2 = degree(G,A2)) %>%
group_by(A1,A2) %>%
mutate(cota = min(k1,k2)) %>%
ungroup() %>%
ggplot(aes(x=mincut,y=cota)) +
geom_jitter()
df %>% arrange(desc(mincut)) %>% head()
df %>% arrange(desc(mincut)) %>% head(n=10)
log(69)
?dlnorm
log(8)
log(197)
log(5)
shiny::runApp('LABURO/taller de datos populares/EPH/EPH/tablero_prototipo')
install.packages('gclust')
remotes::install_github("barrpet/gclust")
require(gclust)
library('gclust')
library('barrpet')
remotes::install_github("barrpet/gclust")
library(redwalk)
data("dolphins")
plot(dolphins)
require(ggraph)
dolphins %>% ggraph() + geom_node_label() + geom_edge_link()
dolphins %>% ggraph() + geom_node_label(aes(label=name)) + geom_edge_link()
dolphins %>% ggraph() + geom_edge_link() + geom_node_label(aes(label=name))
dolphins %>% ggraph() + geom_edge_link() + geom_node_label(aes(label=name,color=color))
dolphins %>% ggraph() + geom_edge_link() + geom_node_label(aes(label=name,fill=color))
data("davisclub")
davisclub %>% ggraph() + geom_edge_link() + geom_node_label(aes(label=name,fill=color))
plot(davisclub)
davisclub %>% get.vertex.attribute() %>% names()
V(davisclub)$type %>% table
davisclub %>% ggraph() + geom_edge_link() + geom_node_label(aes(label=name,fill=type))
data("football")
davisclub %>% get.vertex.attribute() %>% names()
football %>% get.vertex.attribute() %>% names()
football %>% ggraph() + geom_edge_link() + geom_node_label(aes(label=name,fill=color))
football %>% ggraph() + geom_edge_link() + geom_node_label(aes(label=name,fill=membership))
football %>% ggraph() + geom_edge_link() + geom_node_label(aes(label=name,fill=factor(membership)))
plot(football)
data("macaque")
plot(macaque)
?macaque
data("polbooks")
plot(polbooks)
data("polblogs")
plot(polblogs)
setwd("~/LABURO/taller de datos populares/EPH/EPH2/EPH")
library(tidyverse)
library(lemon)
library(eph)
source('ep_funciones.R')
load('base_ep.RData')
canastas <- read.csv('canastas_confiable.csv') %>% mutate(region = toupper(region))
individual_03.hoy <- calcula_pobreza_hogar(
base = individual_03.hoy,
basket = canastas,
print_summary = FALSE
)
base <- individual_03.hoy
basket <- canastas
adulto_equi <- adulto_equivalente %>% rename(SEXO = CH04,EDAD = CH06) %>%
mutate(SEXO = case_when(SEXO == 1 ~ 'VARON', SEXO == 2 ~ 'MUJER'))
adulto_equi
base %>%
mutate(
ITI_ = replace_na(INGRESO_JUBILACION,0) +
replace_na(INGRESO_AYUDA_SOCIAL,0) +
replace_na(INGRESO_MENORES,0)
) %>%
ggplot(aes(ITI_,INGRESO_TOTAL_NO_LABORAL)) +
geom_point()
base %>%
mutate(
ITI_ = replace_na(INGRESO_JUBILACION,0) +
replace_na(INGRESO_AYUDA_SOCIAL,0) +
replace_na(INGRESO_MENORES,0)
) %>%
summarise(mean(ITI_ <= INGRESO_TOTAL_NO_LABORAL))
