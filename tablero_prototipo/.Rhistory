library(tidyverse)
url <- paste0(
'https://apis.datos.gob.ar/series/api/series?ids=',
paste(
'165.1_AAUH_0_0_3',
'57.1_SMVMM_0_M_34',
'145.3_INGNACNAL_DICI_M_15',
'151.1_IPENDIEDAD_2012_M_39',
'151.1_IPENDIEDAD_2012_M_48',
sep=','
),
'&format=json&metadata=full',
'&start_date=2003-01-01',
paste(
'&end_date=',
Sys.Date(),
sep=''),
'&limit=1000'
)
page <- GET(url) # API request
status_code(page) # # Check that the call is successful
jsonAUHSMVM <- fromJSON(url)
datos <- jsonAUHSMVM$data  %>% as.data.frame()
colnames(datos) = c('Fecha',
'AUH',# Asignación universal por hije
'SMVM',# Salario mínimo vital y movil
'IPC', # Indice Precios al Consumidor
'TIA_CE', # Trabajadorxs independientes Autonomxs con estacionalidad
'TIMS_CE') # Trabajadorxs independientes con monotributo social con estacionalidad
datos %>% na.omit %>% glimpse
datos %>%
mutate(
Fecha = as.Date(Fecha),
AUH = as.numeric(AUH),
SMVM = as.numeric(SMVM),
IPC = as.numeric(IPC),
TIA_CE = as.numeric(TIA_CE),
TIMS_CE = as.numeric(TIMS_CE)
) %>%
mutate(deflactor = first(na.omit(IPC))/IPC) %>%
mutate(SSC = SMVM/2) ->
datos
datos %>% na.omit %>% glimpse
datos %>%
ggplot( aes( x = Fecha, y = AUH)) +
geom_line()
datos %>%
ggplot( aes( x = Fecha, y = AUH*deflactor)) +
geom_line() +
xlim(as.Date(c('2016-12-01','2022-01-01')))
page <- GET(url) # API request
status_code(page) # # Check that the call is successful
jsonAUHSMVM <- fromJSON(url)
datos <- jsonAUHSMVM$data  %>% as.data.frame()
datos %>% na.omit %>% glimpse
colnames(datos) = c('Fecha',
'AUH',# Asignación universal por hije
'SMVM',# Salario mínimo vital y movil
'IPC', # Indice Precios al Consumidor
'TIA_CE', # Trabajadorxs independientes Autonomxs con estacionalidad
'TIMS_CE') # Trabajadorxs independientes con monotributo social con estacionalidad
datos %>% na.omit %>% glimpse
datos %>%
ggplot( aes( x = Fecha, y = AUH)) +
geom_line(
datos %>%
ggplot( aes( x = Fecha, y = AUH)) +
geom_line()
datos %>%
ggplot( aes( x = Fecha, y = AUH)) +
geom_line()
datos %>% na.omit %>% glimpse
datos %>%
mutate(
Fecha = as.Date(Fecha),
AUH = as.numeric(AUH),
SMVM = as.numeric(SMVM),
IPC = as.numeric(IPC),
TIA_CE = as.numeric(TIA_CE),
TIMS_CE = as.numeric(TIMS_CE)
) %>%
mutate(deflactor = first(na.omit(IPC))/IPC) %>%
mutate(SSC = SMVM/2) ->
datos
datos %>% na.omit %>% glimpse
datos <- jsonAUHSMVM$data  %>% as.data.frame()
colnames(datos) = c('Fecha',
'AUH',# Asignación universal por hije
'SMVM',# Salario mínimo vital y movil
'IPC', # Indice Precios al Consumidor
'TIA_CE', # Trabajadorxs independientes Autonomxs con estacionalidad
'TIMS_CE') # Trabajadorxs independientes con monotributo social con estacionalidad
datos %>% na.omit %>% glimpse
datos[0]
datos[[0]]
datos$AUH
as.numeric(datos$AUH)
datos <- jsonAUHSMVM$data  %>% as.data.frame(stringsAsFactors)
datos <- jsonAUHSMVM$data  %>% as.data.frame(StringsAsFactors=False)
datos <- jsonAUHSMVM$data  %>% as.data.frame(stringsAsFactors=FALSE)
datos <- jsonAUHSMVM$data  %>% as.data.frame(stringsAsFactors=FALSE)
colnames(datos) = c('Fecha',
'AUH',# Asignación universal por hije
'SMVM',# Salario mínimo vital y movil
'IPC', # Indice Precios al Consumidor
'TIA_CE', # Trabajadorxs independientes Autonomxs con estacionalidad
'TIMS_CE') # Trabajadorxs independientes con monotributo social con estacionalidad
datos %>%
mutate(
Fecha = as.Date(Fecha),
AUH = as.numeric(AUH),
SMVM = as.numeric(SMVM),
IPC = as.numeric(IPC),
TIA_CE = as.numeric(TIA_CE),
TIMS_CE = as.numeric(TIMS_CE)
) %>%
mutate(deflactor = first(na.omit(IPC))/IPC) %>%
mutate(SSC = SMVM/2) ->
datos
datos %>% na.omit %>% glimpse
datos %>%
ggplot( aes( x = Fecha, y = AUH)) +
geom_line()
datos %>%
ggplot( aes( x = Fecha, y = AUH*deflactor)) +
geom_line() +
xlim(as.Date(c('2016-12-01','2022-01-01')))
datos %>%
ggplot( aes( x = Fecha, y = SSC*deflactor)) +
geom_line() +
xlim(as.Date(c('2016-12-01','2022-01-01')))
datos %>%
ggplot( aes( x = Fecha)) +
geom_line(aes(y = SSC*deflactor, color='SSC')) +
geom_line(aes(y = AUH*deflactor, color='AUH')) +
xlim(as.Date(c('2016-12-01','2022-01-01'))) +
ylab('Monto [Pesos en términos reales]') +
theme(legend.position = c(.9,.9)) +
scale_color_discrete(name='Asistencia social')
datos %>%
mutate( SSC = 100*SSC/first(SSC),
AUH = 100*AUH/first(AUH)) %>%
ggplot( aes( x = Fecha)) +
geom_line(aes(y = SSC*deflactor, color='SSC')) +
geom_line(aes(y = AUH*deflactor, color='AUH')) +
xlim(as.Date(c('2016-12-01','2022-01-01'))) +
ylab('Monto [Pesos en términos reales]') +
theme(legend.position = c(.9,.9)) +
scale_color_discrete(name='Asistencia social')
datos %>%
mutate( SSC = 100*SSC/first(na.omit(SSC)),
AUH = 100*AUH/first(na.omit(AUH))) %>%
ggplot( aes( x = Fecha)) +
geom_line(aes(y = SSC*deflactor, color='SSC')) +
geom_line(aes(y = AUH*deflactor, color='AUH')) +
xlim(as.Date(c('2016-12-01','2022-01-01'))) +
ylab('Monto [Pesos en términos reales]') +
theme(legend.position = c(.9,.9)) +
scale_color_discrete(name='Asistencia social')
datos %>%
muate(SSC = SSC*deflactor,
AUH = AUH*deflactor) %>%
mutate( SSC = 100*SSC/first(na.omit(SSC)),
AUH = 100*AUH/first(na.omit(AUH))) %>%
ggplot( aes( x = Fecha)) +
geom_line(aes(y = SSC, color='SSC')) +
geom_line(aes(y = AUH, color='AUH')) +
xlim(as.Date(c('2016-12-01','2022-01-01'))) +
ylab('Monto [Pesos en términos reales]') +
theme(legend.position = c(.9,.9)) +
scale_color_discrete(name='Asistencia social')
datos %>%
mutate(SSC = SSC*deflactor,
AUH = AUH*deflactor) %>%
mutate( SSC = 100*SSC/first(na.omit(SSC)),
AUH = 100*AUH/first(na.omit(AUH))) %>%
ggplot( aes( x = Fecha)) +
geom_line(aes(y = SSC, color='SSC')) +
geom_line(aes(y = AUH, color='AUH')) +
xlim(as.Date(c('2016-12-01','2022-01-01'))) +
ylab('Monto [Pesos en términos reales]') +
theme(legend.position = c(.9,.9)) +
scale_color_discrete(name='Asistencia social')
datos %>%
mutate(SSC = SSC*deflactor,
AUH = AUH*deflactor) %>%
mutate( SSC = 100*SSC/first(na.omit(SSC)),
AUH = 100*AUH/first(na.omit(AUH))) %>%
ggplot( aes( x = Fecha)) +
geom_line(aes(y = SSC, color='SSC')) +
geom_line(aes(y = AUH, color='AUH')) +
xlim(as.Date(c('2015-12-01','2022-01-01'))) +
ylab('Monto [Pesos en términos reales]') +
theme(legend.position = c(.9,.9)) +
scale_color_discrete(name='Asistencia social')
datos %>%
ggplot( aes( x = Fecha, y = AUH)) +
geom_line()
datos %>%
ggplot( aes( x = Fecha, y = AUH*deflactor)) +
geom_line() +
xlim(as.Date(c('2015-12-01','2022-01-01')))
datos %>%
mutate(SSC = SSC*deflactor,
AUH = AUH*deflactor) %>%
mutate( SSC = 100*SSC/first(na.omit(SSC)),
AUH = 100*AUH/first(na.omit(AUH))) %>%
ggplot( aes( x = Fecha)) +
geom_line(aes(y = SSC, color='SSC')) +
geom_line(aes(y = AUH, color='AUH')) +
xlim(as.Date(c('2016-12-01','2022-01-01'))) +
ylab('Monto [Pesos en términos reales]') +
theme(legend.position = c(.9,.9)) +
scale_color_discrete(name='Asistencia social') +
ggtitle("Base dic. 2016 = 100")
library(httr)
library(jsonlite)
library(tidyverse)
url <- paste0(
'https://apis.datos.gob.ar/series/api/series?ids=',
paste(
'165.1_AAUH_0_0_3',
'57.1_SMVMM_0_M_34',
'145.3_INGNACNAL_DICI_M_15',
'151.1_IPENDIEDAD_2012_M_39',
'151.1_IPENDIEDAD_2012_M_48',
sep=','
),
'&format=json&metadata=full',
'&start_date=2003-01-01',
paste(
'&end_date=',
Sys.Date(),
sep=''),
'&limit=1000'
)
page <- GET(url) # API request
status_code(page) # # Check that the call is successful
jsonAUHSMVM <- fromJSON(url)
datos <- jsonAUHSMVM$data  %>% as.data.frame(stringsAsFactors=FALSE)
colnames(datos) = c('Fecha',
'AUH',# Asignación universal por hije
'SMVM',# Salario mínimo vital y movil
'IPC', # Indice Precios al Consumidor
'TIA_CE', # Trabajadorxs independientes Autonomxs con estacionalidad
'TIMS_CE') # Trabajadorxs independientes con monotributo social con estacionalidad
datos %>% na.omit %>% glimpse
datos %>%
mutate(
Fecha = as.Date(Fecha),
AUH = as.numeric(AUH),
SMVM = as.numeric(SMVM),
IPC = as.numeric(IPC),
TIA_CE = as.numeric(TIA_CE),
TIMS_CE = as.numeric(TIMS_CE)
) %>%
mutate(deflactor = first(na.omit(IPC))/IPC) %>%
mutate(SSC = SMVM/2) ->
datos
datos %>% na.omit %>% glimpse
datos %>%
ggplot( aes( x = Fecha, y = AUH)) +
geom_line()
datos %>%
ggplot( aes( x = Fecha, y = AUH*deflactor)) +
geom_line() +
xlim(as.Date(c('2016-12-01','2022-01-01')))
datos %>%
mutate(SSC = SSC*deflactor,
AUH = AUH*deflactor) %>%
mutate( SSC = 100*SSC/first(na.omit(SSC)),
AUH = 100*AUH/first(na.omit(AUH))) %>%
ggplot( aes( x = Fecha)) +
geom_line(aes(y = SSC, color='SSC')) +
geom_line(aes(y = AUH, color='AUH')) +
xlim(as.Date(c('2016-12-01','2022-01-01'))) +
ylab('Monto [Pesos en términos reales]') +
theme(legend.position = c(.9,.9)) +
scale_color_discrete(name='Asistencia social') +
ggtitle("Base dic. 2016 = 100")
load('./EPH/base_ep.RData')
source('./EPH/ep_funciones.R')
library(lemon)
library(eph)
individual_03 %>% glimpse
individual_03.hoy <- organize_labels(df=individual_03.hoy, type='individual')#organizamos los nombres de las columnas
individual_03.hoy %>% View
load('./EPH/base_ep.RData')
individual_03.hoy %>% View
unique(individual_03.hoy$REGION)
"PAMPEANA" %in% unique(individual_03.hoy$REGION)
"PAMPEANA" %in% unique(individual_03.hoy$REGION)[2:]
"PAMPEANA" %in% v[2:]
"PAMPEANA" %in%
v[2]
v <- unique(individual_03.hoy$REGION)
"PAMPEANA" %in%
v[2]
"PAMPEANA" %in% v[2:n()]
"PAMPEANA" %in% v[2]
v[c(2,3)]
v[c(2,n)]
v[c(2,)]
"PAMPEANA" %in% v[seq(2,4)]
v[v[seq(2,4)]]
v[seq(2,4)]
v[seq(2,n(v))]
v[seq(2,len(v))]
v[seq(2,length(v))]
v[seq(1,length(v))]
"PAMPEANA" %in% v[seq(1,length(v))]
"PAMPEANA" %in% v[seq(2,length(v))]
## Grafico 1:
### Economía popular en el tiempo:
### Graficamos Cuentapropistas no profesionales en el tiempo
### Faltaría el resto
individual_03.hoy %>%
FILTER(individual_03.hoy$REGION %in% v[2]) %>%
group_by(YEAR,TRIMESTER) %>%
genera_resumen() %>%
mutate('FECHA' = as.Date(paste(YEAR,3*TRIMESTER,1,sep='-'))) %>%
ungroup() %>%
ggplot(aes(x=FECHA,
y = (CUENTAPROPISTAS_NO_PROFESIONALES+TFSR)/1e6)) +
geom_pointline() +
ylab('Cuentapropistas no profesionales y T.F.S.R. [Millones]') +
expand_limits(y=c(0,5))
load('./EPH/base_ep.RData')
source('./EPH/ep_funciones.R')
library(lemon)
library(eph)
v <- unique(individual_03.hoy$REGION)
## Grafico 1:
### Economía popular en el tiempo:
### Graficamos Cuentapropistas no profesionales en el tiempo
### Faltaría el resto
individual_03.hoy %>%
FILTER(individual_03.hoy$REGION %in% v[2]) %>%
group_by(YEAR,TRIMESTER) %>%
genera_resumen() %>%
mutate('FECHA' = as.Date(paste(YEAR,3*TRIMESTER,1,sep='-'))) %>%
ungroup() %>%
ggplot(aes(x=FECHA,
y = (CUENTAPROPISTAS_NO_PROFESIONALES+TFSR)/1e6)) +
geom_pointline() +
ylab('Cuentapropistas no profesionales y T.F.S.R. [Millones]') +
expand_limits(y=c(0,5))
library(ggplot2)
## Grafico 1:
### Economía popular en el tiempo:
### Graficamos Cuentapropistas no profesionales en el tiempo
### Faltaría el resto
individual_03.hoy %>%
FILTER(individual_03.hoy$REGION %in% v[2]) %>%
group_by(YEAR,TRIMESTER) %>%
genera_resumen() %>%
mutate('FECHA' = as.Date(paste(YEAR,3*TRIMESTER,1,sep='-'))) %>%
ungroup() %>%
ggplot(aes(x=FECHA,
y = (CUENTAPROPISTAS_NO_PROFESIONALES+TFSR)/1e6)) +
geom_pointline() +
ylab('Cuentapropistas no profesionales y T.F.S.R. [Millones]') +
expand_limits(y=c(0,5))
library(tidyverse)
## Grafico 1:
### Economía popular en el tiempo:
### Graficamos Cuentapropistas no profesionales en el tiempo
### Faltaría el resto
individual_03.hoy %>%
FILTER(individual_03.hoy$REGION %in% v[2]) %>%
group_by(YEAR,TRIMESTER) %>%
genera_resumen() %>%
mutate('FECHA' = as.Date(paste(YEAR,3*TRIMESTER,1,sep='-'))) %>%
ungroup() %>%
ggplot(aes(x=FECHA,
y = (CUENTAPROPISTAS_NO_PROFESIONALES+TFSR)/1e6)) +
geom_pointline() +
ylab('Cuentapropistas no profesionales y T.F.S.R. [Millones]') +
expand_limits(y=c(0,5))
## Grafico 1:
### Economía popular en el tiempo:
### Graficamos Cuentapropistas no profesionales en el tiempo
### Faltaría el resto
individual_03.hoy %>%
filter(individual_03.hoy$REGION %in% v[2]) %>%
group_by(YEAR,TRIMESTER) %>%
genera_resumen() %>%
mutate('FECHA' = as.Date(paste(YEAR,3*TRIMESTER,1,sep='-'))) %>%
ungroup() %>%
ggplot(aes(x=FECHA,
y = (CUENTAPROPISTAS_NO_PROFESIONALES+TFSR)/1e6)) +
geom_pointline() +
ylab('Cuentapropistas no profesionales y T.F.S.R. [Millones]') +
expand_limits(y=c(0,5))
## Grafico 1:
### Economía popular en el tiempo:
### Graficamos Cuentapropistas no profesionales en el tiempo
### Faltaría el resto
individual_03.hoy %>%
filter(individual_03.hoy$REGION %in% v[2]) %>%
group_by(YEAR,TRIMESTER) %>%
genera_resumen() %>%
mutate('FECHA' = as.Date(paste(YEAR,3*TRIMESTER,1,sep='-'))) %>%
ungroup() %>%
ggplot(aes(x=FECHA,
y = (CUENTAPROPISTAS_NO_PROFESIONALES+TFSR)/1e6)) +
geom_pointline() +
ylab('Cuentapropistas no profesionales y T.F.S.R. [Millones]') +
expand_limits(y=c(0,1))
## Grafico 1:
### Economía popular en el tiempo:
### Graficamos Cuentapropistas no profesionales en el tiempo
### Faltaría el resto
individual_03.hoy %>%
filter(individual_03.hoy$REGION %in% v[c(2,3)]) %>%
group_by(YEAR,TRIMESTER) %>%
genera_resumen() %>%
mutate('FECHA' = as.Date(paste(YEAR,3*TRIMESTER,1,sep='-'))) %>%
ungroup() %>%
ggplot(aes(x=FECHA,
y = (CUENTAPROPISTAS_NO_PROFESIONALES+TFSR)/1e6)) +
geom_pointline() +
ylab('Cuentapropistas no profesionales y T.F.S.R. [Millones]') +
expand_limits(y=c(0,1))
v <- regiones[c(2,3)]
regiones <- unique(individual_03.hoy$REGION)
v <- regiones[c(2,3)]
titulo <- char(v)
## Grafico 1:
### Economía popular en el tiempo:
### Graficamos Cuentapropistas no profesionales en el tiempo
### Faltaría el resto
individual_03.hoy %>%
filter(individual_03.hoy$REGION %in% v) %>%
group_by(YEAR,TRIMESTER) %>%
genera_resumen() %>%
mutate('FECHA' = as.Date(paste(YEAR,3*TRIMESTER,1,sep='-'))) %>%
ungroup() %>%
ggplot(aes(x=FECHA,
y = (CUENTAPROPISTAS_NO_PROFESIONALES+TFSR)/1e6)) +
geom_pointline() +
ylab('Cuentapropistas no profesionales y T.F.S.R. [Millones]') +
expand_limits(y=c(0,1)) +
title(titutlo)
## Grafico 1:
### Economía popular en el tiempo:
### Graficamos Cuentapropistas no profesionales en el tiempo
### Faltaría el resto
individual_03.hoy %>%
filter(individual_03.hoy$REGION %in% v) %>%
group_by(YEAR,TRIMESTER) %>%
genera_resumen() %>%
mutate('FECHA' = as.Date(paste(YEAR,3*TRIMESTER,1,sep='-'))) %>%
ungroup() %>%
ggplot(aes(x=FECHA,
y = (CUENTAPROPISTAS_NO_PROFESIONALES+TFSR)/1e6)) +
geom_pointline() +
ylab('Cuentapropistas no profesionales y T.F.S.R. [Millones]') +
expand_limits(y=c(0,1)) +
title(titulo)
## Grafico 1:
### Economía popular en el tiempo:
### Graficamos Cuentapropistas no profesionales en el tiempo
### Faltaría el resto
individual_03.hoy %>%
filter(individual_03.hoy$REGION %in% v) %>%
group_by(YEAR,TRIMESTER) %>%
genera_resumen() %>%
mutate('FECHA' = as.Date(paste(YEAR,3*TRIMESTER,1,sep='-'))) %>%
ungroup() %>%
ggplot(aes(x=FECHA,
y = (CUENTAPROPISTAS_NO_PROFESIONALES+TFSR)/1e6)) +
geom_pointline() +
ylab('Cuentapropistas no profesionales y T.F.S.R. [Millones]') +
expand_limits(y=c(0,1) +
title(titulo))
## Grafico 1:
### Economía popular en el tiempo:
### Graficamos Cuentapropistas no profesionales en el tiempo
### Faltaría el resto
individual_03.hoy %>%
filter(individual_03.hoy$REGION %in% v) %>%
group_by(YEAR,TRIMESTER) %>%
genera_resumen() %>%
mutate('FECHA' = as.Date(paste(YEAR,3*TRIMESTER,1,sep='-'))) %>%
ungroup() %>%
ggplot(aes(x=FECHA,
y = (CUENTAPROPISTAS_NO_PROFESIONALES+TFSR)/1e6)) +
geom_pointline() +
ylab('Cuentapropistas no profesionales y T.F.S.R. [Millones]') +
expand_limits(y=c(0,1)) +
ggtitle(titulo)
titulo
## Grafico 1:
### Economía popular en el tiempo:
### Graficamos Cuentapropistas no profesionales en el tiempo
### Faltaría el resto
individual_03.hoy %>%
filter(individual_03.hoy$REGION %in% v) %>%
group_by(YEAR,TRIMESTER) %>%
genera_resumen() %>%
mutate('FECHA' = as.Date(paste(YEAR,3*TRIMESTER,1,sep='-'))) %>%
ungroup() %>%
ggplot(aes(x=FECHA,
y = (CUENTAPROPISTAS_NO_PROFESIONALES+TFSR)/1e6)) +
geom_pointline() +
ylab('Cuentapropistas no profesionales y T.F.S.R. [Millones]') +
expand_limits(y=c(0,1)) +
ggtitle(titulo)
setwd("~/EPH/tablero_prototipo")
load('../base_ep.RData')
shiny::runApp()
