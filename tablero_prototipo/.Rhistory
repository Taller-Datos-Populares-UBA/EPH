ggplot(aes(x=knorm,y=mMCnorm,color=tipo)) +
#geom_point(size=.01,alpha=.1) +
geom_smooth(lwd=.5) +
#scale_color_continuous(low='blue',high='red') +
theme(legend.position = c(.8,.2))
dfFull %>%
ggplot(aes(x=knorm,y=mMCnorm,color=tipo,group=M)) +
#geom_point(size=.01,alpha=.1) +
geom_smooth(lwd=.5) +
#scale_color_continuous(low='blue',high='red') +
theme(legend.position = c(.8,.2))
dfFull %>%
ggplot(aes(x=knorm,y=mMCnorm,group=M)) +
#geom_point(size=.01,alpha=.1) +
geom_smooth(aes(color=tipo),lwd=.5) +
#scale_color_continuous(low='blue',high='red') +
theme(legend.position = c(.8,.2))
dfFull %>%
ggplot(aes(x=knorm,y=mMCnorm,group=M)) +
#geom_point(size=.01,alpha=.1) +
geom_smooth(aes(color=tipo),lwd=.5) +
#scale_color_continuous(low='blue',high='red') +
scale_color_discrete(values=c('azar','pa','pa2')) +
theme(legend.position = c(.8,.2))
dfFull %>%
ggplot(aes(x=knorm,y=mMCnorm,group=M)) +
#geom_point(size=.01,alpha=.1) +
geom_smooth(aes(color=tipo),lwd=.5) +
#scale_color_continuous(low='blue',high='red') +
scale_color_manual(values=c('azar','pa','pa2')) +
theme(legend.position = c(.8,.2))
?scale_color_discrete
dfFull %>%
ggplot(aes(x=knorm,y=mMCnorm,group=M)) +
#geom_point(size=.01,alpha=.1) +
geom_smooth(aes(color=tipo),lwd=.5) +
#scale_color_continuous(low='blue',high='red') +
scale_color_discrete(type=c('azar'='red','pa'='blue','pa2'='green')) +
theme(legend.position = c(.8,.2))
?geom_line
dfFull %>%
ggplot(aes(x=knorm,y=mMCnorm,group=M,linetype=tipo)) +
#geom_point(size=.01,alpha=.1) +
geom_smooth(lwd=.5) +
#scale_color_continuous(low='blue',high='red') +
scale_color_discrete(type=c('azar'='red','pa'='blue','pa2'='green')) +
theme(legend.position = c(.8,.2))
dfFull %>%
ggplot(aes(x=knorm,y=mMCnorm,color=M,linetype=tipo)) +
#geom_point(size=.01,alpha=.1) +
geom_smooth(lwd=.5) +
#scale_color_continuous(low='blue',high='red') +
scale_color_discrete(type=c('azar'='red','pa'='blue','pa2'='green')) +
theme(legend.position = c(.8,.2))
ggplot() +
{
geom_smooth(
data=dfFull %>% filter(tipo == 'azar'),
aes(x=knorm,y=mMCnorm,group=M,color='red'))
}
ggplot() +
{
geom_smooth(
data=dfFull %>% filter(tipo == 'azar'),
aes(x=knorm,y=mMCnorm,group=M,color='red'))
} +
{
geom_smooth(
data=dfFull %>% filter(tipo == 'pa'),
aes(x=knorm,y=mMCnorm,group=M,color='blue'))
} +
{
geom_smooth(
data=dfFull %>% filter(tipo == 'pa2'),
aes(x=knorm,y=mMCnorm,group=M,color='skyblue'))
}
geom_smooth(
data=dfFull %>% filter(tipo == 'azar'),
aes(x=knorm,y=mMCnorm,group=M),color='red')
ggplot() +
{
geom_smooth(
data=dfFull %>% filter(tipo == 'azar'),
aes(x=knorm,y=mMCnorm,group=M),color='red')
} +
{
geom_smooth(
data=dfFull %>% filter(tipo == 'pa'),
aes(x=knorm,y=mMCnorm,group=M),color='blue')
} +
{
geom_smooth(
data=dfFull %>% filter(tipo == 'pa2'),
aes(x=knorm,y=mMCnorm,group=M),color='skyblue')
}
?sample_smallworld
sample_smallworld(1,1,1,0) %>% plot
sample_smallworld(2,1,1,0) %>% plot
sample_smallworld(2,2,1,0) %>% plot
sample_smallworld(1,2,1,0) %>% plot
sample_smallworld(2,2,1,0) %>% plot
sample_smallworld(2,2,2,0) %>% plot
sample_smallworld(3,2,2,0) %>% plot
sample_smallworld(3,1,1,0) %>% plot
sample_smallworld(3,2,1,0) %>% plot
sample_smallworld(2,3,1,0) %>% plot
sample_smallworld(1,3,1,0) %>% plot
sample_smallworld(1,34,1,0) %>% plot
sample_smallworld(1,34,2,0) %>% plot
sample_smallworld(1,4,2,0) %>% plot
sample_smallworld(1,10,2,0) %>% plot
sample_smallworld(1,10,3,0) %>% plot
sample_smallworld(1,10,4,0) %>% plot
sample_smallworld(2,10,4,0) %>% plot
sample_smallworld(1,34,4,0) %>% plot
sample_smallworld(1,34,34,0) %>% plot
sample_smallworld(1,34,35,0) %>% plot
sample_smallworld(1,34,100,0) %>% plot
sample_smallworld(1,34,100,0)
sample_smallworld(1,34,100,0) %>% vcount()
sample_smallworld(1,34,100,0) %>% ecount()
sample_smallworld(1,34,34,0) %>% ecount()
sample_smallworld(1,34,35,0) %>% ecount()
df4 <- lapply(1:34,function(m){
df4 <- lapply(1:Ntry,function(intento){
G <- sample_smallworld(dim = 1,size = N,nei = m,p=0)
df4 <- combn(1:N,2,simplify=FALSE) %>% do.call(rbind,.) %>% as.data.frame()
df4 %>% mutate(MC = sapply(1:nrow(df4),function(i) min_cut(G,df4$V1[i],df4$V2[i]))) -> df4
df4 %>% mutate(V1 = V2, V2= V1) %>% bind_rows(df4) %>% group_by(V1) %>% summarise(mMC = mean(MC)) %>% mutate(k = degree(G,V1), M = ecount(G)) -> df4
return(df4 %>% mutate(intento = intento))
}) %>% bind_rows() %>% mutate(m=m)
}) %>% bind_rows()
df %>%
group_by(M,intento) %>%
mutate(knorm = (k-min(k))/(max(k)-min(k)),
mMCnorm = (mMC-min(mMC))/(max(mMC)-min(mMC))) %>%
ggplot(aes(x=knorm,y=mMCnorm,color=M)) +
geom_smooth()
df %>%
group_by(M,intento) %>%
mutate(knorm = (k-min(k))/(max(k)-min(k)),
mMCnorm = (mMC-min(mMC))/(max(mMC)-min(mMC)))
df %>%
group_by(M,intento) %>%
mutate(knorm = (k-min(k))/(max(k)-min(k)),
mMCnorm = (mMC-min(mMC))/(max(mMC)-min(mMC))) %>% filter(M>0)
df4 %>%
group_by(M,intento) %>%
mutate(knorm = (k-min(k))/(max(k)-min(k)),
mMCnorm = (mMC-min(mMC))/(max(mMC)-min(mMC))) %>%
ggplot(aes(x=knorm,y=mMCnorm,color=M)) +
geom_smooth()
df4 %>%
group_by(M,intento) %>%
mutate(knorm = (k-min(k))/(max(k)-min(k)),
mMCnorm = (mMC-min(mMC))/(max(mMC)-min(mMC))) %>%
df4 %>%
group_by(M,intento) %>%
mutate(knorm = (k-min(k))/(max(k)-min(k)),
mMCnorm = (mMC-min(mMC))/(max(mMC)-min(mMC)))
df4 <- lapply(1:34,function(m){
df4 <- lapply(1:Ntry,function(intento){
G <- sample_smallworld(dim = 1,size = N,nei = m,p=0.5)
df4 <- combn(1:N,2,simplify=FALSE) %>% do.call(rbind,.) %>% as.data.frame()
df4 %>% mutate(MC = sapply(1:nrow(df4),function(i) min_cut(G,df4$V1[i],df4$V2[i]))) -> df4
df4 %>% mutate(V1 = V2, V2= V1) %>% bind_rows(df4) %>% group_by(V1) %>% summarise(mMC = mean(MC)) %>% mutate(k = degree(G,V1), M = ecount(G)) -> df4
return(df4 %>% mutate(intento = intento))
}) %>% bind_rows() %>% mutate(m=m)
}) %>% bind_rows()
df4 %>%
group_by(M,intento) %>%
mutate(knorm = (k-min(k))/(max(k)-min(k)),
mMCnorm = (mMC-min(mMC))/(max(mMC)-min(mMC))) %>%
ggplot(aes(x=knorm,y=mMCnorm,color=M)) +
geom_smooth()
bind_rows(
df %>% mutate(tipo = 'azar'),
df2 %>% mutate(tipo = 'pa'),
df3 %>% mutate(tipo = 'pa2'),
df4 %>% mutate(tipo = 'SW')
) %>%
group_by(M,intento,tipo) %>%
mutate(knorm = (k-min(k))/(max(k)-min(k)),
mMCnorm = (mMC-min(mMC))/(max(mMC)-min(mMC)) ) -> dfFull
geom_smooth(
data=dfFull %>% filter(tipo == 'SW'),
aes(x=knorm,y=mMCnorm,group=M),color='green')
ggplot() +
{
geom_smooth(
data=dfFull %>% filter(tipo == 'azar'),
aes(x=knorm,y=mMCnorm,group=M),color='red')
} +
{
geom_smooth(
data=dfFull %>% filter(tipo == 'pa'),
aes(x=knorm,y=mMCnorm,group=M),color='blue')
} +
{
geom_smooth(
data=dfFull %>% filter(tipo == 'pa2'),
aes(x=knorm,y=mMCnorm,group=M),color='skyblue')
} +
{
geom_smooth(
data=dfFull %>% filter(tipo == 'SW'),
aes(x=knorm,y=mMCnorm,group=M),color='green')
}
ggplot(lwd=.1) +
{
geom_smooth(
data=dfFull %>% filter(tipo == 'azar'),
aes(x=knorm,y=mMCnorm,group=M),color='red')
} +
{
geom_smooth(
data=dfFull %>% filter(tipo == 'pa'),
aes(x=knorm,y=mMCnorm,group=M),color='blue')
} +
{
geom_smooth(
data=dfFull %>% filter(tipo == 'pa2'),
aes(x=knorm,y=mMCnorm,group=M),color='skyblue')
} +
{
geom_smooth(
data=dfFull %>% filter(tipo == 'SW'),
aes(x=knorm,y=mMCnorm,group=M),color='green')
}
ggplot() +
{
geom_smooth(
data=dfFull %>% filter(tipo == 'azar'),
aes(x=knorm,y=mMCnorm,group=M),color='red',lwd=.1)
} +
{
geom_smooth(
data=dfFull %>% filter(tipo == 'pa'),
aes(x=knorm,y=mMCnorm,group=M),color='blue',lwd=.1)
} +
{
geom_smooth(
data=dfFull %>% filter(tipo == 'pa2'),
aes(x=knorm,y=mMCnorm,group=M),color='skyblue',lwd=.1)
} +
{
geom_smooth(
data=dfFull %>% filter(tipo == 'SW'),
aes(x=knorm,y=mMCnorm,group=M),color='green',lwd=.1)
}
df5 <- lapply(seq(0,1,.1),function(f){
df5 <- lapply(1:Ntry,function(intento){
G <- sample_smallworld(dim = 1,size = N,nei = N/3,p=f)
df5 <- combn(1:N,2,simplify=FALSE) %>% do.call(rbind,.) %>% as.data.frame()
df5 %>% mutate(MC = sapply(1:nrow(df5),function(i) min_cut(G,df5$V1[i],df5$V2[i]))) -> df5
df5 %>% mutate(V1 = V2, V2= V1) %>% bind_rows(df5) %>% group_by(V1) %>% summarise(mMC = mean(MC)) %>% mutate(k = degree(G,V1), M = ecount(G)) -> df5
return(df5 %>% mutate(intento = intento))
}) %>% bind_rows() %>% mutate(p=f)
}) %>% bind_rows()
require(igraph)
require(tidyverse)
require(igraphdata)
data("karate")
G <- karate
rm(karate)
df <- combn(1:vcount(G),2) %>% t %>% as.data.frame()
colnames(df) <- c('A1','A2')
df %>% head
df$mincut <- sapply(1:nrow(df),function(i) min_cut(graph = G,source = df$A1[i],target = df$A2[i]))
df$mincut
df
require(igraph)
require(tidyverse)
require(igraphdata)
data("karate")
G <- karate
rm(karate)
df %>%
mutate(k1 = degree(G,A1)) %>%
mutate(k2 = degree(G,A2)) %>%
group_by(A1,A2) %>%
mutate(cota = min(k1,k2)) %>%
ungroup() %>%
ggplot(aes(x=mincut,y=cota)) +
geom_point()
df %>%
mutate(k1 = degree(G,A1)) %>%
mutate(k2 = degree(G,A2)) %>%
group_by(A1,A2) %>%
mutate(cota = min(k1,k2)) %>%
ungroup() %>%
ggplot(aes(x=mincut,y=cota)) +
geom_jitter()
df %>% arrange(desc(mincut)) %>% head()
df %>% arrange(desc(mincut)) %>% head(n=10)
log(69)
?dlnorm
log(8)
log(197)
log(5)
shiny::runApp('LABURO/taller de datos populares/EPH/EPH/tablero_prototipo')
install.packages('gclust')
remotes::install_github("barrpet/gclust")
require(gclust)
library('gclust')
library('barrpet')
remotes::install_github("barrpet/gclust")
library(redwalk)
data("dolphins")
plot(dolphins)
require(ggraph)
dolphins %>% ggraph() + geom_node_label() + geom_edge_link()
dolphins %>% ggraph() + geom_node_label(aes(label=name)) + geom_edge_link()
dolphins %>% ggraph() + geom_edge_link() + geom_node_label(aes(label=name))
dolphins %>% ggraph() + geom_edge_link() + geom_node_label(aes(label=name,color=color))
dolphins %>% ggraph() + geom_edge_link() + geom_node_label(aes(label=name,fill=color))
data("davisclub")
davisclub %>% ggraph() + geom_edge_link() + geom_node_label(aes(label=name,fill=color))
plot(davisclub)
davisclub %>% get.vertex.attribute() %>% names()
V(davisclub)$type %>% table
davisclub %>% ggraph() + geom_edge_link() + geom_node_label(aes(label=name,fill=type))
data("football")
davisclub %>% get.vertex.attribute() %>% names()
football %>% get.vertex.attribute() %>% names()
football %>% ggraph() + geom_edge_link() + geom_node_label(aes(label=name,fill=color))
football %>% ggraph() + geom_edge_link() + geom_node_label(aes(label=name,fill=membership))
football %>% ggraph() + geom_edge_link() + geom_node_label(aes(label=name,fill=factor(membership)))
plot(football)
data("macaque")
plot(macaque)
?macaque
data("polbooks")
plot(polbooks)
data("polblogs")
plot(polblogs)
# Carga de librerías
library(shiny)
library(tidyverse)
library(lemon)
?aes_
aes_plot <- aes_(
x = ~ FECHA,
y = ~ (CUENTAPROPISTAS_NO_PROFESIONALES+TFSR),
group = ~ REGION,
color = ~ REGION)
aes_plot
length(aes_plot)
ifelse(1>2,aes_plot,1)
ifelse(1<2,aes_plot,1)
case_when(1<2 ~ aes_plot)
aes_plot
case_when(1<2 ~ list(aes_plot))
quos
quos('A','B')
quos(c('A','B'))
?quos
unique(NULL)
source("~/LABURO/taller de datos populares/EPH/EPH/tablero_prototipo/helpers.R", echo=TRUE)
runApp('LABURO/taller de datos populares/EPH/EPH/tablero_prototipo')
runApp('LABURO/taller de datos populares/EPH/EPH/tablero_prototipo')
runApp('LABURO/taller de datos populares/EPH/EPH/tablero_prototipo')
runApp('LABURO/taller de datos populares/EPH/EPH/tablero_prototipo')
runApp('LABURO/taller de datos populares/EPH/EPH/tablero_prototipo')
?filter_at
runApp('LABURO/taller de datos populares/EPH/EPH/tablero_prototipo')
ip <- 'REGION'
zonas = 'PAMPEANA'
individual_03.hoy %>% filter(across(ip, ~.x %in% zonas))
individual_03.hoy %>% filter(across(ip, ~.x %in% zonas)) %>% select_at(ip)
unique(individual_03.hoy[,ip])
individual_03.hoy %>%
select_at(input$variable_zona) %>%
unlist %>% unique
individual_03.hoy %>%
select_at(ip) %>%
unlist %>% unique
individual_03.hoy %>%
select_at(ip) %>%
unlist %>% unique
individual_03.hoy %>%
select_at(ip) %>%
unique
individual_03.hoy %>%
select_at(ip) %>%
unique %>% unlist
runApp('LABURO/taller de datos populares/EPH/EPH/tablero_prototipo')
runApp('LABURO/taller de datos populares/EPH/EPH/tablero_prototipo')
runApp('LABURO/taller de datos populares/EPH/EPH/tablero_prototipo')
runApp('LABURO/taller de datos populares/EPH/EPH/tablero_prototipo')
ip
as.formula(ip)
as.formula(paste('~',ip)
)
quo
as.expression(ip)
~ as.expression(ip)
class(~REGION)
as.expression(paste('~',input$variable_zona))
as.expression(paste('~',ip))
?aes_
as.formula(paste('~',ip))
~ paste(SEXO, as.expression(ip))
paste('~paste(SEXO,', ip,')')
as.formula(paste('~paste(SEXO,', ip,')'))
runApp('LABURO/taller de datos populares/EPH/EPH/tablero_prototipo')
install.packages('packrat')
install.packages('rsconnect')
runApp('LABURO/taller de datos populares/EPH/EPH/tablero_prototipo')
library(tidyverse)
setwd("~/LABURO/taller de datos populares/EPH/EPH/tablero_prototipo")
load('data/base_ep.RData')
source('helpers.R')
individual_03.hoy %>% group_by(YEAR,
TRIMESTER,
SEXO,
REGION,
AGLOMERADO) %>%
genera_resumen()
individual_03.hoy <- individual_03.hoy %>% group_by(YEAR,
TRIMESTER,
SEXO,
REGION,
AGLOMERADO) %>%
genera_resumen()
save(individual_03.hoy,'data/base_ep.RData')
save(individual_03.hoy,file='data/base_ep.RData')
individual_03.hoy
input$slider_años <- c(2010,2015)
input <- list()
input$slider_años <- c(2010,2015)
input$variable_zona <- 'REGION'
zonas <- 'PAMPEANA'
individual_03.hoy %>%
filter(YEAR > input$slider_años[1],
YEAR < input$slider_años[2],
across(input$variable_zona, ~.x %in% zonas))
individual_03.hoy[,input$variable_zona]
individual_03.hoy %>%
filter(YEAR > input$slider_años[1],
YEAR < input$slider_años[2],
across(input$variable_zona, ~.x %in% zonas))
individual_03.hoy %>% ungroup %>%
filter(YEAR > input$slider_años[1],
YEAR < input$slider_años[2],
across(input$variable_zona, ~.x %in% zonas))
individual_03.hoy %>% ungroup() %>%
filter(YEAR > input$slider_años[1],
YEAR < input$slider_años[2],
across(input$variable_zona, ~.x %in% zonas))
load('../base_ep.RData')
individual_03.hoy
individual_03.hoy <- individual_03.hoy %>% group_by(YEAR,
TRIMESTER,
SEXO,
REGION,
AGLOMERADO) %>%
genera_resumen() %>% ungroup()
individual_03.hoy <- individual_03.hoy %>% group_by(YEAR,
TRIMESTER,
SEXO,
REGION,
AGLOMERADO) %>%
genera_resumen()
load('../base_ep.RData')
individual_03.hoy %>% group_by(YEAR,
TRIMESTER,
SEXO,
REGION,
AGLOMERADO) %>%
genera_resumen()
individual_03.hoy <- individual_03.hoy %>% group_by(YEAR,
TRIMESTER,
SEXO,
REGION,
AGLOMERADO) %>%
genera_resumen() %>% ungroup() %>%
mutate(ECON_NUCLEO = CUENTAPROPISTAS_NO_PROFESIONALES+TFSR)
individual_03.hoy
save(individual_03.hoy,file='data/base_ep.RData')
individual_03.hoy %>% ungroup() %>%
filter(YEAR > input$slider_años[1],
YEAR < input$slider_años[2],
across(input$variable_zona, ~.x %in% zonas))
grouping_vars
grouping_vars <- quos('SEXO')
individual_03.hoy %>% ungroup() %>%
filter(YEAR > input$slider_años[1],
YEAR < input$slider_años[2],
across(input$variable_zona, ~.x %in% zonas)) %>%
group_by_at(grouping_vars)
individual_03.hoy %>% ungroup() %>%
filter(YEAR > input$slider_años[1],
YEAR < input$slider_años[2],
across(input$variable_zona, ~.x %in% zonas)) %>%
group_by_at(grouping_vars) %>%
summarise_at(.vars = ECON_NUCLEO,.funs = sum)
individual_03.hoy %>% ungroup() %>%
filter(YEAR > input$slider_años[1],
YEAR < input$slider_años[2],
across(input$variable_zona, ~.x %in% zonas)) %>%
group_by_at(grouping_vars) %>%
summarise(ECON_NUCLEO = sum(ECON_NUCLEO))
grouping_vars <- quos('SEXO','YEAR','TRIMESTER')
individual_03.hoy %>% ungroup() %>%
filter(YEAR > input$slider_años[1],
YEAR < input$slider_años[2],
across(input$variable_zona, ~.x %in% zonas)) %>%
group_by_at(grouping_vars) %>%
summarise(ECON_NUCLEO = sum(ECON_NUCLEO))
source("~/LABURO/taller de datos populares/EPH/EPH/tablero_prototipo/helpers.R", echo=TRUE)
runApp()
