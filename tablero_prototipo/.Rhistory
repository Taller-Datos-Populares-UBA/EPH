mutate(ciudad = case_when(
ciudad == 'boston' ~ 'Boston',
TRUE ~ 'LA')) %>%
filter(sim_tipo == 'homo') %>%
filter( grupo != 'General') %>%
ggplot(aes ( x= grupo, y = sim, color = ciudad)) +
geom_point() +
geom_hline(data = df %>%
filter(sim_tipo == 'homo',grupo == 'General') %>%
mutate(ciudad = case_when(
ciudad == 'boston' ~ 'Boston',
TRUE ~ 'LA'))
,aes(yintercept = sim,color=ciudad)) +
facet_wrap( ~ tipo) +
xlab('') +
ylab('Homofilia') +
scale_color_discrete(name = 'Ciudad') +
theme_bw() +
theme(legend.position = c(.7,.25))
library(osmdata)
bb <- getbb('Ciudad Autonoma de Buenos Aires')
bb
bb <- getbb('Ciudad Autonoma de Buenos Aires',format_out = 'polygon')
bb
length(bb)
plot(bb[[1]])
plot(bb[[2]])
plot(bb)
bb
plot(bb[[2]][[1]])
available_features()
available_tags('route')
opq(bbox = bb) %>%
add_osm_feature(key = 'route',value='bus')
rutas <- opq(bbox = bb) %>%
add_osm_feature(key = 'route',value='bus') %>%
osmdata_sf()
closeAllConnections()
rutas <- opq(bbox = bb) %>%
add_osm_feature(key = 'route',value='bus') %>%
osmdata_sf()
bb2 <-getbb('Boedo, Ciudad Autonoma de Buenos Aires',format_out = 'polygon')
plot(bb2[[1]][[1]])
plot(bb2[[2]][[1]])
bb2
plot(bb2)
plot(bb[[1]][[1]])
plot(bb[[1]][[1]],type='l')
lines(bb2)
rutas <- opq(bbox = bb2) %>%
add_osm_feature(key = 'route',value='bus') %>%
osmdata_sf()
closeAllConnections()
rutas <- opq(bbox = bb2) %>%
add_osm_feature(key = 'route',value='bus') %>%
osmdata_sf()
library(osmdata)
bb2 <-getbb('Boedo, Ciudad Autonoma de Buenos Aires',format_out = 'polygon')
bb <- getbb('Ciudad Autonoma de Buenos Aires',format_out = 'polygon')
bb2 <-getbb('Boedo, Ciudad Autonoma de Buenos Aires',format_out = 'polygon')
plot(bb[[1]][[1]],type='l')
lines(bb2)
rutas <- opq(bbox = bb2,timeout = 1000) %>%
add_osm_feature(key = 'route',value='bus') %>%
osmdata_sf()
rutas$osm_points
rutas$osm_lines
library(sf)
rutas$osm_lines %>% st_geometry %>% plot
rutas$osm_lines %>% st_geometry %>% plot(reset=FALSE)
rutas$bbox
bb2 %>% plot
rutas$osm_lines %>% st_geometry %>% plot(reset=FALSE)
bb2 %>% plot(add=TRUE)
bb2 %>% st_polygon %>% st_sfc(crs=4326)
bb2 %>% list %>% st_polygon %>% st_sfc(crs=4326)
bb2 %>% list %>% st_polygon %>% st_sfc(crs=4326) %>% plot(add=TRUE)
rutas$osm_lines %>% st_geometry %>% plot(reset=FALSE)
bb2 %>% list %>% st_polygon %>% st_sfc(crs=4326) %>% plot(add=TRUE)
bb2 %>% list %>% st_polygon %>% st_sfc(crs=4326) %>% plot(col='red',add=TRUE)
bb2 %>% list %>% st_polygon %>% st_sfc(crs=4326) %>% plot(col='red',reset=FALSE)
rutas$osm_lines %>% st_geometry %>% plot(add=TRUE)
rutas$osm_lines$bus
rutas$osm_lines$turn.lanes
rutas$osm_lines %>% View()
rutas$osm_lines %>% drop_na(bus) %>% View
library(tidyverse)
rutas$osm_lines %>% View()
rutas$osm_lines %>% drop_na(bus) %>% View
available_features()
available_tags('tracks')
available_tags('public_transport')
rutas <- opq(bbox = bb2,timeout = 1000) %>%
add_osm_feature(key = 'route',value='bus') %>%
add_osm_feature(key = 'public_transport',value='station') %>%
osmdata_sf()
rutas$osm_points
rutas$osm_lines
rutas$osm_polygons
paradas <- opq(bbox = bb2,timeout = 1000) %>%
#add_osm_feature(key = 'route',value='bus') %>%
add_osm_feature(key = 'public_transport',value='station') %>%
osmdata_sf()
paradas$osm_points
available_tags('public_transport')
paradas <- opq(bbox = bb2,timeout = 1000) %>%
#add_osm_feature(key = 'route',value='bus') %>%
add_osm_feature(key = 'public_transport',value='platform') %>%
osmdata_sf()
paradas$
available_tags('public_transport')
paradas$osm_lines
plot(paradas$osm_lines[[1]])
paradas$osm_points
plot(paradas$osm_points)
plot(paradas$osm_points %>% drop_na)
available_tags('public_transport')
paradas <- opq(bbox = bb2,timeout = 1000) %>%
#add_osm_feature(key = 'route',value='bus') %>%
add_osm_feature(key = 'public_transport',value='stop_position') %>%
osmdata_sf()
paradas$osm_points
paradas <- opq(bbox = bb2,timeout = 1000) %>%
#add_osm_feature(key = 'route',value='bus') %>%
add_osm_feature(key = 'public_transport',value='stop_area') %>%
osmdata_sf()
paradas$osm_points
paradas$osm_lines
available_tags('highway')
rutas <- opq(bbox = bb2,timeout = 1000) %>%
add_osm_feature(key = 'highway',value='busway') %>%
osmdata_sf()
rutas$osm_points
available_tags('highway')
rutas <- opq(bbox = bb2,timeout = 1000) %>%
add_osm_feature(key = 'highway',value='bus_stop') %>%
osmdata_sf()
rutas$osm_points
available_features('bus')
available_tags('bus')
?add_osm_feature
paradas <- opq(bbox = bb2,timeout = 1000) %>%
add_osm_feature(features = c(
"\"highway\"=\"bus_stop\"",
"\"public_transport\"=\"patform\"",
"\"public_transport\"=\"stop_position\"",
"\"public_transport\"=\"stop_area\"",
"\"type\"=\"public_transport\""
)) %>%
osmdata_sf()
paradas <- opq(bbox = bb2,timeout = 1000) %>%
add_osm_feature(features = c(
"\"highway\"=\"bus_stop\"",
"\"public_transport\"=\"patform\"",
"\"public_transport\"=\"stop_position\"",
"\"public_transport\"=\"stop_area\"",
"\"type\"=\"public_transport\""
)) %>%
osmdata_sf()
c(
"\"highway\"=\"bus_stop\"",
"\"public_transport\"=\"patform\"",
"\"public_transport\"=\"stop_position\"",
"\"public_transport\"=\"stop_area\"",
"\"type\"=\"public_transport\""
)
paradas <- opq(bbox = bb2,timeout = 1000) %>%
add_osm_feature(features = c(
"\"highway\"=\"bus_stop\"",
"\"public_transport\"=\"patform\"",
"\"public_transport\"=\"stop_position\"",
"\"public_transport\"=\"stop_area\"",
"\"type\"=\"public_transport\""
))
paradas <- opq(bbox = bb2,timeout = 1000) %>%
add_osm_features(features = c(
"\"highway\"=\"bus_stop\"",
"\"public_transport\"=\"patform\"",
"\"public_transport\"=\"stop_position\"",
"\"public_transport\"=\"stop_area\"",
"\"type\"=\"public_transport\""
)) %>%
osmdata_sf()
paradas
paradas <- opq(bbox = bb2,timeout = 1000) %>%
add_osm_features(features = c(
"\"highway\"=\"bus_stop\"",
"\"public_transport\"=\"patform\"",
"\"public_transport\"=\"stop_position\"",
"\"public_transport\"=\"stop_area\"",
"\"type\"=\"public_transport\""
)) %>%
osmdata_sf()
paradas
paradas$osm_lines
paradas$osm_multilines
paradas$osm_points
paradas$osm_points %>% View
paradas$osm_points %>% select(network)
paradas$osm_points %>% select(network) %>% drop_na()
available_features()
paradas <- opq(bbox = bb2,timeout = 1000) %>%
add_osm_feature(key = 'type',value='route') %>%
add_osm_feature(key = 'route',value='bus') %>%
osmdata_sf()
paradas$osm_lines
paradas$osm_lines %>% View
paradas <- opq(bbox = bb2,timeout = 1000) %>%
add_osm_feature(key = 'type',value='route') %>%
add_osm_feature(key = 'route',value='minibus') %>%
osmdata_sf()
paradas <- opq(bbox = bb2,timeout = 1000) %>%
add_osm_feature(key = 'type',value='route_master') %>%
add_osm_feature(key = 'route_master',value='bus') %>%
osmdata_sf()
paradas$osm_points
paradas$osm_points %>% View
paradas <- opq(bbox = bb2,timeout = 1000) %>%
add_osm_feature(key = 'type',value='route_master') %>%
osmdata_sf()
paradas$osm_polygons
paradas$osm_polygons %>% View
paradas$osm_points %>% View
dbinom(-3,10,.5)
dbinom(20,10,.5)
P_1 <- function(x,N=1){
r <- 1/(N+1) * !(x < 0 | x > N)
return(r)
}
P_2 <- function(x,N=1){
r <- dbinom(x = x,size = N,prob = .5)
return(r)
}
P_3 <- function(x,N=1,p=.25){
r <- dbinom(x = x,size = N,prob = p)
return(r)
}
A_X <- function(N){
return( (0:N)/N )
}
Xs <- A_X(10)
P_1 <- function(x,N=1){
r <- 1/(N+1) * !(x < 0 | x > N)
return(r)
}
P_2 <- function(x,N=1){
r <- dbinom(x = N*x,size = N,prob = .5)
return(r)
}
P_3 <- function(x,N=1,p=.25){
r <- dbinom(x = N*x,size = N,prob = p)
return(r)
}
A_X <- function(N){
return( (0:N)/N )
}
P_1(Xs,10)
sum(P_1(Xs,10))
sum(P_2(Xs,10))
P_2(Xs,10)
P_1 <- function(x,N=1){
r <- 1/(N+1) * !(x < 0 | x > N)
return(r)
}
P_2 <- function(x,N=1){
r <- dbinom(x = N*x,size = N,prob = .5)
return(r)
}
P_3 <- function(x,N=1,p=.25){
r <- dbinom(x = N*x,size = N,prob = p)
return(r)
}
A_X <- function(N){
return( (0:N)/N )
}
D12 <- sapply(1:10,function(N){
alfabeto <- A_X(N)
P_1(alfabeto,N) * log2(P_1(alfabeto,N)/P_2(alfabeto,N))
})
D12
D12 <- sapply(1:10,function(N){
alfabeto <- A_X(N)
sum(P_1(alfabeto,N) * log2(P_1(alfabeto,N)/P_2(alfabeto,N)))
})
D12
D12 <- sapply(1:10,function(N){
alfabeto <- A_X(N)
sum(P_1(alfabeto,N) * log2(P_1(alfabeto,N)/P_2(alfabeto,N)))
})
D21 <- sapply(1:10,function(N){
alfabeto <- A_X(N)
sum(P_2(alfabeto,N) * log2(P_2(alfabeto,N)/P_1(alfabeto,N)))
})
data.frame(N = Ns, D12 = D12, D21 = D21) %>%
ggplot(aes(x = D12, y = D21,color = N)) +
geom_point()+
geom_line()
library(tidyverse)
data.frame(N = Ns, D12 = D12, D21 = D21) %>%
ggplot(aes(x = D12, y = D21,color = N)) +
geom_point()+
geom_line()
Ns <- 1:10
D12 <- sapply(Ns,function(N){
alfabeto <- A_X(N)
sum(P_1(alfabeto,N) * log2(P_1(alfabeto,N)/P_2(alfabeto,N)))
})
D21 <- sapply(Ns,function(N){
alfabeto <- A_X(N)
sum(P_2(alfabeto,N) * log2(P_2(alfabeto,N)/P_1(alfabeto,N)))
})
library(tidyverse)
data.frame(N = Ns, D12 = D12, D21 = D21) %>%
ggplot(aes(x = D12, y = D21,color = N)) +
geom_point()+
geom_line()
library(tidyverse)
data.frame(N = Ns, D12 = D12, D21 = D21) %>%
ggplot(aes(x = D12, y = D21,color = N)) +
geom_point() +
geom_line() +
geom_abline(slope = 1, intercept = 0)
library(latex2exp)
library(tidyverse)
library(latex2exp)
data.frame(N = Ns, D12 = D12, D21 = D21) %>%
ggplot(aes(x = D12, y = D21,color = N)) +
geom_point() +
geom_line() +
geom_abline(slope = 1, intercept = 0) +
xlab(TeX("$D_{KL} (P_1 \rightarrow P_2$"))
library(tidyverse)
library(latex2exp)
data.frame(N = Ns, D12 = D12, D21 = D21) %>%
ggplot(aes(x = D12, y = D21,color = N)) +
geom_point() +
geom_line() +
geom_abline(slope = 1, intercept = 0) +
xlab(TeX("$D_{KL} (P_1 \\rightarrow P_2$"))
library(tidyverse)
library(latex2exp)
data.frame(N = Ns, D12 = D12, D21 = D21) %>%
ggplot(aes(x = D12, y = D21,color = N)) +
geom_point() +
geom_line() +
geom_abline(slope = 1, intercept = 0) +
xlab(TeX("$D_{KL} (P_1 \\rightarrow P_2)$")) +
xlab(TeX("$D_{KL} (P_2 \\rightarrow P_1)$"))
library(tidyverse)
library(latex2exp)
data.frame(N = Ns, D12 = D12, D21 = D21) %>%
ggplot(aes(x = D12, y = D21,color = N)) +
geom_point() +
geom_line() +
geom_abline(slope = 1, intercept = 0) +
xlab(TeX("$D_{KL} (P_1 \\rightarrow P_2)$")) +
ylab(TeX("$D_{KL} (P_2 \\rightarrow P_1)$"))
Ns <- 1:100
D12 <- sapply(Ns,function(N){
alfabeto <- A_X(N)
sum(P_1(alfabeto,N) * log2(P_1(alfabeto,N)/P_2(alfabeto,N)))
})
D21 <- sapply(Ns,function(N){
alfabeto <- A_X(N)
sum(P_2(alfabeto,N) * log2(P_2(alfabeto,N)/P_1(alfabeto,N)))
})
library(tidyverse)
library(latex2exp)
data.frame(N = Ns, D12 = D12, D21 = D21) %>%
ggplot(aes(x = D12, y = D21,color = N)) +
geom_point() +
geom_line() +
geom_abline(slope = 1, intercept = 0) +
xlab(TeX("$D_{KL} (P_1 \\rightarrow P_2)$")) +
ylab(TeX("$D_{KL} (P_2 \\rightarrow P_1)$"))
Ns <- 1:1000
D12 <- sapply(Ns,function(N){
alfabeto <- A_X(N)
sum(P_1(alfabeto,N) * log2(P_1(alfabeto,N)/P_2(alfabeto,N)))
})
D21 <- sapply(Ns,function(N){
alfabeto <- A_X(N)
sum(P_2(alfabeto,N) * log2(P_2(alfabeto,N)/P_1(alfabeto,N)))
})
library(tidyverse)
library(latex2exp)
data.frame(N = Ns, D12 = D12, D21 = D21) %>%
ggplot(aes(x = D12, y = D21,color = N)) +
geom_point() +
geom_line() +
geom_abline(slope = 1, intercept = 0) +
xlab(TeX("$D_{KL} (P_1 \\rightarrow P_2)$")) +
ylab(TeX("$D_{KL} (P_2 \\rightarrow P_1)$"))
library(tidyverse)
library(latex2exp)
data.frame(N = Ns, D12 = D12, D21 = D21) %>%
ggplot(aes(x = D12, y = D21,color = N)) +
#geom_point() +
geom_line() +
geom_abline(slope = 1, intercept = 0) +
xlab(TeX("$D_{KL} (P_1 \\rightarrow P_2)$")) +
ylab(TeX("$D_{KL} (P_2 \\rightarrow P_1)$"))
data.frame(N = Ns, D12 = D12, D21 = D21) %>%
ggplot(aes(x = D12, y = D21,color = N)) +
#geom_point() +
geom_line() +
geom_abline(slope = 1, intercept = 0) +
xlab(TeX("$D_{KL} (P_1 \\rightarrow P_2)$")) +
ylab(TeX("$D_{KL} (P_2 \\rightarrow P_1)$")) +
theme(aspect.ratio = 1)
data.frame(N = Ns, D12 = D12, D21 = D21) %>%
ggplot(aes(x = D12, y = D21,color = N)) +
#geom_point() +
geom_line() +
geom_abline(slope = 1, intercept = 0) +
xlab(TeX("$D_{KL} (P_1 \\rightarrow P_2)$")) +
ylab(TeX("$D_{KL} (P_2 \\rightarrow P_1)$")) +
coord_fixed()
Ns <- 1:10
D12 <- sapply(Ns,function(N){
alfabeto <- A_X(N)
sum(P_1(alfabeto,N) * log2(P_1(alfabeto,N)/P_2(alfabeto,N)))
})
D21 <- sapply(Ns,function(N){
alfabeto <- A_X(N)
sum(P_2(alfabeto,N) * log2(P_2(alfabeto,N)/P_1(alfabeto,N)))
})
library(tidyverse)
library(latex2exp)
data.frame(N = Ns, D12 = D12, D21 = D21) %>%
ggplot(aes(x = D12, y = D21,color = N)) +
#geom_point() +
geom_line() +
geom_abline(slope = 1, intercept = 0) +
xlab(TeX("$D_{KL} (P_1 \\rightarrow P_2)$")) +
ylab(TeX("$D_{KL} (P_2 \\rightarrow P_1)$")) +
coord_fixed()
library(tidyverse)
library(latex2exp)
data.frame(N = Ns, D12 = D12, D21 = D21) %>%
ggplot(aes(x = D12, y = D21,color = N)) +
#geom_point() +
geom_line() +
geom_abline(slope = 1, intercept = 0) +
xlab(TeX("$D_{KL} (P_1 \\rightarrow P_2)$")) +
ylab(TeX("$D_{KL} (P_2 \\rightarrow P_1)$")) +
coord_fixed()
Ns <- 1:100
D12 <- sapply(Ns,function(N){
alfabeto <- A_X(N)
sum(P_1(alfabeto,N) * log2(P_1(alfabeto,N)/P_2(alfabeto,N)))
})
D21 <- sapply(Ns,function(N){
alfabeto <- A_X(N)
sum(P_2(alfabeto,N) * log2(P_2(alfabeto,N)/P_1(alfabeto,N)))
})
library(tidyverse)
library(latex2exp)
data.frame(N = Ns, D12 = D12, D21 = D21) %>%
ggplot(aes(x = D12, y = D21,color = N)) +
#geom_point() +
geom_line() +
geom_abline(slope = 1, intercept = 0) +
xlab(TeX("$D_{KL} (P_1 \\rightarrow P_2)$")) +
ylab(TeX("$D_{KL} (P_2 \\rightarrow P_1)$")) +
coord_fixed()
data.frame(N = Ns, D12 = D12, D21 = D21) %>%
ggplot(aes(x = D12, y = D21,color = N)) +
#geom_point() +
geom_line() +
geom_abline(slope = 1, intercept = 0) +
xlab(TeX("$D_{KL} (P_1 \\rightarrow P_2)$")) +
ylab(TeX("$D_{KL} (P_2 \\rightarrow P_1)$")) +
coord_fixed()
P_empirica <- function(x,muestras){
return(mean(muestras==x))
}
muestras <- rbinom(n=100,size=10,prob=.5)
muestras <- rbinom(n=100,size=10,prob=.5)/10
muestras
alfabeto <- A_X(10)
alfabeto
P_empirica(alfabeto,muestras)
?Vectorize
P_empirica <- function(x,muestras){
return(sapply(x,function(xi) mean(muestras==xi)))
}
P_empirica(alfabeto,muestras)
P_1(alfabeto,10)
P_empirica(alfabeto,muestras)
D1E <- sum(P_1(alfabeto,10)*log2(P_1(alfabeto,10)/P_empirica(alfabeto,muestras)))
D1E
D2E <- sum(P_2(alfabeto,10)*log2(P_2(alfabeto,10)/P_empirica(alfabeto,muestras)))
D2E
muestras <- rbinom(n=1000,size=10,prob=.5)/10
alfabeto <- A_X(10)
D1E <- sum(P_1(alfabeto,10)*log2(P_1(alfabeto,10)/P_empirica(alfabeto,muestras)))
D2E <- sum(P_2(alfabeto,10)*log2(P_2(alfabeto,10)/P_empirica(alfabeto,muestras)))
D1E
D2E
shiny::runApp('LABURO/taller de datos populares/EPH/EPH2/EPH/tablero_prototipo')
setwd("~/LABURO/taller de datos populares/EPH/EPH2/EPH/tablero_prototipo")
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
