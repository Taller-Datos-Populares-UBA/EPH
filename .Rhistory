geom_point() +
geom_hline(data = df %>%
filter(sim_tipo == 'homo',grupo == 'General'),aes(yintercept = sim,color=ciudad)) +
facet_wrap( ~ tipo) +
theme(legend.position = c(.7,.25)) +
xlab('') +
scale_color_discrete(name = 'Ciudad')
df %>%
mutate(ciudad = case_when(
ciudad == 'boston' ~ 'Boston',
TRUE ~ 'LA')) %>%
filter(sim_tipo == 'homo') %>%
filter( grupo != 'General') %>%
ggplot(aes ( x= grupo, y = sim, color = ciudad)) +
geom_point() +
geom_hline(data = df %>%
filter(sim_tipo == 'homo',grupo == 'General') %>%
mutate(ciudad = case_when(
ciudad == 'boston' ~ 'Boston',
TRUE ~ 'LA'))
,aes(yintercept = sim,color=ciudad)) +
facet_wrap( ~ tipo) +
theme(legend.position = c(.7,.25)) +
xlab('') +
scale_color_discrete(name = 'Ciudad')
df %>%
mutate(ciudad = case_when(
ciudad == 'boston' ~ 'Boston',
TRUE ~ 'LA')) %>%
filter(sim_tipo == 'homo') %>%
filter( grupo != 'General') %>%
ggplot(aes ( x= grupo, y = sim, color = ciudad,shape = ciudad)) +
geom_point() +
geom_hline(data = df %>%
filter(sim_tipo == 'homo',grupo == 'General') %>%
mutate(ciudad = case_when(
ciudad == 'boston' ~ 'Boston',
TRUE ~ 'LA'))
,aes(yintercept = sim,color=ciudad)) +
facet_wrap( ~ tipo) +
theme(legend.position = c(.7,.25)) +
xlab('') +
scale_color_discrete(name = 'Ciudad')
df %>%
mutate(ciudad = case_when(
ciudad == 'boston' ~ 'Boston',
TRUE ~ 'LA')) %>%
filter(sim_tipo == 'homo') %>%
filter( grupo != 'General') %>%
ggplot(aes ( x= grupo, y = sim, color = ciudad)) +
geom_point() +
geom_hline(data = df %>%
filter(sim_tipo == 'homo',grupo == 'General') %>%
mutate(ciudad = case_when(
ciudad == 'boston' ~ 'Boston',
TRUE ~ 'LA'))
,aes(yintercept = sim,color=ciudad)) +
facet_wrap( ~ tipo) +
theme(legend.position = c(.7,.25)) +
xlab('') +
scale_color_discrete(name = 'Ciudad')
df %>%
mutate(ciudad = case_when(
ciudad == 'boston' ~ 'Boston',
TRUE ~ 'LA')) %>%
filter(sim_tipo == 'homo') %>%
filter( grupo != 'General') %>%
ggplot(aes ( x= grupo, y = sim, color = ciudad)) +
geom_point() +
geom_hline(data = df %>%
filter(sim_tipo == 'homo',grupo == 'General') %>%
mutate(ciudad = case_when(
ciudad == 'boston' ~ 'Boston',
TRUE ~ 'LA'))
,aes(yintercept = sim,color=ciudad)) +
facet_wrap( ~ tipo) +
theme(legend.position = c(.7,.25)) +
xlab('') +
ylab('Homofilia') +
scale_color_discrete(name = 'Ciudad')
df %>%
mutate(ciudad = case_when(
ciudad == 'boston' ~ 'Boston',
TRUE ~ 'LA')) %>%
filter(sim_tipo == 'homo') %>%
filter( grupo != 'General') %>%
ggplot(aes ( x= grupo, y = sim, color = ciudad)) +
geom_point() +
geom_hline(data = df %>%
filter(sim_tipo == 'homo',grupo == 'General') %>%
mutate(ciudad = case_when(
ciudad == 'boston' ~ 'Boston',
TRUE ~ 'LA'))
,aes(yintercept = sim,color=ciudad)) +
facet_wrap( ~ tipo) +
theme(legend.position = c(.7,.25)) +
xlab('') +
ylab('Homofilia') +
scale_color_discrete(name = 'Ciudad') +
theme_bw()
df %>%
mutate(ciudad = case_when(
ciudad == 'boston' ~ 'Boston',
TRUE ~ 'LA')) %>%
filter(sim_tipo == 'homo') %>%
filter( grupo != 'General') %>%
ggplot(aes ( x= grupo, y = sim, color = ciudad)) +
geom_point() +
geom_hline(data = df %>%
filter(sim_tipo == 'homo',grupo == 'General') %>%
mutate(ciudad = case_when(
ciudad == 'boston' ~ 'Boston',
TRUE ~ 'LA'))
,aes(yintercept = sim,color=ciudad)) +
facet_wrap( ~ tipo) +
xlab('') +
ylab('Homofilia') +
scale_color_discrete(name = 'Ciudad') +
theme_bw() +
theme(legend.position = c(.7,.25))
library(osmdata)
bb <- getbb('Ciudad Autonoma de Buenos Aires')
bb
bb <- getbb('Ciudad Autonoma de Buenos Aires',format_out = 'polygon')
bb
length(bb)
plot(bb[[1]])
plot(bb[[2]])
plot(bb)
bb
plot(bb[[2]][[1]])
available_features()
available_tags('route')
opq(bbox = bb) %>%
add_osm_feature(key = 'route',value='bus')
rutas <- opq(bbox = bb) %>%
add_osm_feature(key = 'route',value='bus') %>%
osmdata_sf()
closeAllConnections()
rutas <- opq(bbox = bb) %>%
add_osm_feature(key = 'route',value='bus') %>%
osmdata_sf()
bb2 <-getbb('Boedo, Ciudad Autonoma de Buenos Aires',format_out = 'polygon')
plot(bb2[[1]][[1]])
plot(bb2[[2]][[1]])
bb2
plot(bb2)
plot(bb[[1]][[1]])
plot(bb[[1]][[1]],type='l')
lines(bb2)
rutas <- opq(bbox = bb2) %>%
add_osm_feature(key = 'route',value='bus') %>%
osmdata_sf()
closeAllConnections()
rutas <- opq(bbox = bb2) %>%
add_osm_feature(key = 'route',value='bus') %>%
osmdata_sf()
library(osmdata)
bb2 <-getbb('Boedo, Ciudad Autonoma de Buenos Aires',format_out = 'polygon')
bb <- getbb('Ciudad Autonoma de Buenos Aires',format_out = 'polygon')
bb2 <-getbb('Boedo, Ciudad Autonoma de Buenos Aires',format_out = 'polygon')
plot(bb[[1]][[1]],type='l')
lines(bb2)
rutas <- opq(bbox = bb2,timeout = 1000) %>%
add_osm_feature(key = 'route',value='bus') %>%
osmdata_sf()
rutas$osm_points
rutas$osm_lines
library(sf)
rutas$osm_lines %>% st_geometry %>% plot
rutas$osm_lines %>% st_geometry %>% plot(reset=FALSE)
rutas$bbox
bb2 %>% plot
rutas$osm_lines %>% st_geometry %>% plot(reset=FALSE)
bb2 %>% plot(add=TRUE)
bb2 %>% st_polygon %>% st_sfc(crs=4326)
bb2 %>% list %>% st_polygon %>% st_sfc(crs=4326)
bb2 %>% list %>% st_polygon %>% st_sfc(crs=4326) %>% plot(add=TRUE)
rutas$osm_lines %>% st_geometry %>% plot(reset=FALSE)
bb2 %>% list %>% st_polygon %>% st_sfc(crs=4326) %>% plot(add=TRUE)
bb2 %>% list %>% st_polygon %>% st_sfc(crs=4326) %>% plot(col='red',add=TRUE)
bb2 %>% list %>% st_polygon %>% st_sfc(crs=4326) %>% plot(col='red',reset=FALSE)
rutas$osm_lines %>% st_geometry %>% plot(add=TRUE)
rutas$osm_lines$bus
rutas$osm_lines$turn.lanes
rutas$osm_lines %>% View()
rutas$osm_lines %>% drop_na(bus) %>% View
library(tidyverse)
rutas$osm_lines %>% View()
rutas$osm_lines %>% drop_na(bus) %>% View
available_features()
available_tags('tracks')
available_tags('public_transport')
rutas <- opq(bbox = bb2,timeout = 1000) %>%
add_osm_feature(key = 'route',value='bus') %>%
add_osm_feature(key = 'public_transport',value='station') %>%
osmdata_sf()
rutas$osm_points
rutas$osm_lines
rutas$osm_polygons
paradas <- opq(bbox = bb2,timeout = 1000) %>%
#add_osm_feature(key = 'route',value='bus') %>%
add_osm_feature(key = 'public_transport',value='station') %>%
osmdata_sf()
paradas$osm_points
available_tags('public_transport')
paradas <- opq(bbox = bb2,timeout = 1000) %>%
#add_osm_feature(key = 'route',value='bus') %>%
add_osm_feature(key = 'public_transport',value='platform') %>%
osmdata_sf()
paradas$
available_tags('public_transport')
paradas$osm_lines
plot(paradas$osm_lines[[1]])
paradas$osm_points
plot(paradas$osm_points)
plot(paradas$osm_points %>% drop_na)
available_tags('public_transport')
paradas <- opq(bbox = bb2,timeout = 1000) %>%
#add_osm_feature(key = 'route',value='bus') %>%
add_osm_feature(key = 'public_transport',value='stop_position') %>%
osmdata_sf()
paradas$osm_points
paradas <- opq(bbox = bb2,timeout = 1000) %>%
#add_osm_feature(key = 'route',value='bus') %>%
add_osm_feature(key = 'public_transport',value='stop_area') %>%
osmdata_sf()
paradas$osm_points
paradas$osm_lines
available_tags('highway')
rutas <- opq(bbox = bb2,timeout = 1000) %>%
add_osm_feature(key = 'highway',value='busway') %>%
osmdata_sf()
rutas$osm_points
available_tags('highway')
rutas <- opq(bbox = bb2,timeout = 1000) %>%
add_osm_feature(key = 'highway',value='bus_stop') %>%
osmdata_sf()
rutas$osm_points
available_features('bus')
available_tags('bus')
?add_osm_feature
paradas <- opq(bbox = bb2,timeout = 1000) %>%
add_osm_feature(features = c(
"\"highway\"=\"bus_stop\"",
"\"public_transport\"=\"patform\"",
"\"public_transport\"=\"stop_position\"",
"\"public_transport\"=\"stop_area\"",
"\"type\"=\"public_transport\""
)) %>%
osmdata_sf()
paradas <- opq(bbox = bb2,timeout = 1000) %>%
add_osm_feature(features = c(
"\"highway\"=\"bus_stop\"",
"\"public_transport\"=\"patform\"",
"\"public_transport\"=\"stop_position\"",
"\"public_transport\"=\"stop_area\"",
"\"type\"=\"public_transport\""
)) %>%
osmdata_sf()
c(
"\"highway\"=\"bus_stop\"",
"\"public_transport\"=\"patform\"",
"\"public_transport\"=\"stop_position\"",
"\"public_transport\"=\"stop_area\"",
"\"type\"=\"public_transport\""
)
paradas <- opq(bbox = bb2,timeout = 1000) %>%
add_osm_feature(features = c(
"\"highway\"=\"bus_stop\"",
"\"public_transport\"=\"patform\"",
"\"public_transport\"=\"stop_position\"",
"\"public_transport\"=\"stop_area\"",
"\"type\"=\"public_transport\""
))
paradas <- opq(bbox = bb2,timeout = 1000) %>%
add_osm_features(features = c(
"\"highway\"=\"bus_stop\"",
"\"public_transport\"=\"patform\"",
"\"public_transport\"=\"stop_position\"",
"\"public_transport\"=\"stop_area\"",
"\"type\"=\"public_transport\""
)) %>%
osmdata_sf()
paradas
paradas <- opq(bbox = bb2,timeout = 1000) %>%
add_osm_features(features = c(
"\"highway\"=\"bus_stop\"",
"\"public_transport\"=\"patform\"",
"\"public_transport\"=\"stop_position\"",
"\"public_transport\"=\"stop_area\"",
"\"type\"=\"public_transport\""
)) %>%
osmdata_sf()
paradas
paradas$osm_lines
paradas$osm_multilines
paradas$osm_points
paradas$osm_points %>% View
paradas$osm_points %>% select(network)
paradas$osm_points %>% select(network) %>% drop_na()
available_features()
paradas <- opq(bbox = bb2,timeout = 1000) %>%
add_osm_feature(key = 'type',value='route') %>%
add_osm_feature(key = 'route',value='bus') %>%
osmdata_sf()
paradas$osm_lines
paradas$osm_lines %>% View
paradas <- opq(bbox = bb2,timeout = 1000) %>%
add_osm_feature(key = 'type',value='route') %>%
add_osm_feature(key = 'route',value='minibus') %>%
osmdata_sf()
paradas <- opq(bbox = bb2,timeout = 1000) %>%
add_osm_feature(key = 'type',value='route_master') %>%
add_osm_feature(key = 'route_master',value='bus') %>%
osmdata_sf()
paradas$osm_points
paradas$osm_points %>% View
paradas <- opq(bbox = bb2,timeout = 1000) %>%
add_osm_feature(key = 'type',value='route_master') %>%
osmdata_sf()
paradas$osm_polygons
paradas$osm_polygons %>% View
paradas$osm_points %>% View
shiny::runApp('LABURO/taller de datos populares/EPH/EPH2/EPH/tablero_prototipo')
agrupar <- c("YEAR", "TRIMESTER")
runApp('LABURO/taller de datos populares/EPH/EPH2/EPH/tablero_prototipo')
runApp('LABURO/taller de datos populares/EPH/EPH2/EPH/tablero_prototipo')
runApp('LABURO/taller de datos populares/EPH/EPH2/EPH/tablero_prototipo')
setwd("~/LABURO/taller de datos populares/EPH/EPH2/EPH/tablero_prototipo")
# Carga de librerías
library(shiny)
library(tidyverse)
library(lemon)
# Carga del dataset
load('data/base_ep_resumen.RData')
source("~/LABURO/taller de datos populares/EPH/EPH2/EPH/prepara_ep_resumen.R", echo=TRUE)
setwd("~/LABURO/taller de datos populares/EPH/EPH2/EPH")
source("~/LABURO/taller de datos populares/EPH/EPH2/EPH/prepara_ep_resumen.R", echo=TRUE)
setwd("~/LABURO/taller de datos populares/EPH/EPH2/EPH/tablero_prototipo")
# Carga de librerías
library(shiny)
library(tidyverse)
library(lemon)
# Carga del dataset
load('data/base_ep_resumen.RData')
# Carga de funciones propias
source('helpers.R')
individual_03.hoy$DESOCUPADES
setwd("~/LABURO/taller de datos populares/EPH/EPH2/EPH")
source("~/LABURO/taller de datos populares/EPH/EPH2/EPH/prepara_ep_resumen.R", echo=TRUE)
setwd("~/LABURO/taller de datos populares/EPH/EPH2/EPH/tablero_prototipo")
# Carga de librerías
library(shiny)
library(tidyverse)
library(lemon)
# Carga del dataset
load('data/base_ep_resumen.RData')
# Carga de funciones propias
source('helpers.R')
individual_03.hoy$DESOCUPADES
individual_03.hoy %>% ggplot(aes(x=as.numeric(paste(YEAR,TRIMESTER)),y=DESOCUPADES)) + geom_point()
individual_03.hoy %>% ggplot(aes(x=as.numeric(paste(YEAR,TRIMESTER,sep='')),y=DESOCUPADES)) + geom_point()
individual_03.hoy %>% filter(REGION = 'GBA') %>% ggplot(aes(x=as.numeric(paste(YEAR,TRIMESTER,sep='')),y=DESOCUPADES)) + geom_point()
individual_03.hoy %>% filter(REGION == 'GBA') %>% ggplot(aes(x=as.numeric(paste(YEAR,TRIMESTER,sep='')),y=DESOCUPADES)) + geom_point()
individual_03.hoy %>% filter(REGION == 'CABA') %>% ggplot(aes(x=as.numeric(paste(YEAR,TRIMESTER,sep='')),y=DESOCUPADES)) + geom_point()
individual_03.hoy %>% filter(AGLOMERADO == 'CABA') %>% ggplot(aes(x=as.numeric(paste(YEAR,TRIMESTER,sep='')),y=DESOCUPADES)) + geom_point()
runApp()
individual_03.hoy
individual_03.hoy %>% ungroup() %>%
filter(SEXO != 'N/A') %>%
runApp()
runApp()
runApp()
?scale_x_date
runApp()
runApp()
runApp()
runApp()
runApp()
rm(list=ls())
gc()
setwd("~/LABURO/taller de datos populares/EPH/EPH2/EPH/tablero_prototipo")
runApp()
individual_03.hoy$EDAD_QUINQUENIO
individual_03.hoy$EDAD_DECENIO
runApp()
runApp()
runApp()
input <- list
input <- list()
input$variable_edad = 'DECENIO'
opciones <- individual_03.hoy %>%
select_at(paste('EDAD',input$variable_edad,sep='_')) %>%
unique %>% unlist %>% as.character %>% discard(is.na)
individual_03.hoy %>%
select_at(paste('EDAD',input$variable_edad,sep='_'))
individual_03.hoy %>%
select_at(paste('EDAD',input$variable_edad,sep='_')) %>%
unique
individual_03.hoy %>%
select_at(paste('EDAD',input$variable_edad,sep='_')) %>%
unique %>% unlist
individual_03.hoy %>%
select_at(paste('EDAD',input$variable_edad,sep='_')) %>%
unique %>% unlist %>% as.character
individual_03.hoy %>%
select_at(paste('EDAD',input$variable_edad,sep='_')) %>%
unique %>% unlist %>% as.character %>% discard(is.na)
detach(scales)
?library
unloadNamespace(scales)
unloadNamespace('scales')
shiny::runApp()
shiny::runApp()
individual_03.hoy %>% ungroup() %>%
filter(
YEAR > input$slider_años[1],
YEAR < input$slider_años[2],
across(input$variable_zona, ~.x %in% zonas),
across(paste('EDAD',input$variable_edad,sep='_'), ~.x %in% edades)
) %>%
filter(SEXO != 'N/A') %>%
group_by_at(grouping_vars) %>%
summarise(
ECONOMIA_POPULAR = sum(ECONOMIA_POPULAR),
RESTO_CUENTAPROPISTAS = sum(RESTO_CUENTAPROPISTAS),
ASALARIADOS_REGISTRADOS = sum(ASALARIADOS_REGISTRADOS),
ASALARIADOS_NOREGISTRADOS = sum(ASALARIADOS_NOREGISTRADOS),
PATRONES = sum(PATRONES),
DESOCUPADES = sum(DESOCUPADES)
) %>%
pivot_longer(cols = c(
'ECONOMIA_POPULAR',
'RESTO_CUENTAPROPISTAS',
'ASALARIADOS_REGISTRADOS',
'ASALARIADOS_NOREGISTRADOS',
'PATRONES',
'DESOCUPADES'),
names_to = 'OCUPACIONES',
values_to = 'PERSONAS') %>% View
individual_03.hoy %>% ungroup() %>%
filter(SEXO != 'N/A') %>%
summarise(
ECONOMIA_POPULAR = sum(ECONOMIA_POPULAR),
RESTO_CUENTAPROPISTAS = sum(RESTO_CUENTAPROPISTAS),
ASALARIADOS_REGISTRADOS = sum(ASALARIADOS_REGISTRADOS),
ASALARIADOS_NOREGISTRADOS = sum(ASALARIADOS_NOREGISTRADOS),
PATRONES = sum(PATRONES),
DESOCUPADES = sum(DESOCUPADES)
)
individual_03.hoy %>% ungroup() %>%
filter(SEXO != 'N/A') %>%
summarise(
ECONOMIA_POPULAR = sum(ECONOMIA_POPULAR),
RESTO_CUENTAPROPISTAS = sum(RESTO_CUENTAPROPISTAS),
ASALARIADOS_REGISTRADOS = sum(ASALARIADOS_REGISTRADOS),
ASALARIADOS_NOREGISTRADOS = sum(ASALARIADOS_NOREGISTRADOS),
PATRONES = sum(PATRONES),
DESOCUPADES = sum(DESOCUPADES),
PEA = sum(ECONOMICAMENTE_ACTIVES)
)
individual_03.hoy %>% ungroup() %>%
filter(SEXO != 'N/A') %>%
summarise(
ECONOMIA_POPULAR = sum(ECONOMIA_POPULAR),
RESTO_CUENTAPROPISTAS = sum(RESTO_CUENTAPROPISTAS),
ASALARIADOS_REGISTRADOS = sum(ASALARIADOS_REGISTRADOS),
ASALARIADOS_NOREGISTRADOS = sum(ASALARIADOS_NOREGISTRADOS),
PATRONES = sum(PATRONES),
DESOCUPADES = sum(DESOCUPADES),
PEA = sum(ECONOMICAMENTE_ACTIVES)
) %>%
pivot_longer(cols = c(
'ECONOMIA_POPULAR',
'RESTO_CUENTAPROPISTAS',
'ASALARIADOS_REGISTRADOS',
'ASALARIADOS_NOREGISTRADOS',
'PATRONES',
'DESOCUPADES'),
names_to = 'OCUPACIONES',
values_to = 'PERSONAS') %>%
ungroup()
ifelse(TRUE,~x,~y)
ifelse(TRUE,list(~x),list(~y))
ifelse(FALSE,list(~x),list(~y))
rm(input)
~ (PERSONAS)/1e6
runApp()
runApp()
runApp()
rm(list=ls())
library(tidyverse)
source('tablero_prototipo/helpers.R')
setwd("~/LABURO/taller de datos populares/EPH/EPH2/EPH")
load('base_ep.RData')
source("~/LABURO/taller de datos populares/EPH/EPH2/EPH/prepara_ep_resumen.R", echo=TRUE)
individual_03.hoy$IT_ECONOMIA_POPULAR
source("~/LABURO/taller de datos populares/EPH/EPH2/EPH/prepara_ep_resumen.R", echo=TRUE)
individual_03.hoy$IT_ECONOMIA_POPULAR
individual_03.hoy$AGLOMERADO
input <- list()
input$variable_zona_t2 <- 'GRAN CORDOBA'
individual_03.hoy %>%
filter(YEAR == max(YEAR)) %>%
filter(TRIMESTER == max(TRIMESTER)) %>%
individual_03.hoy %>%
filter(YEAR == max(YEAR)) %>%
filter(TRIMESTER == max(TRIMESTER))
individual_03.hoy %>%
filter(YEAR == max(YEAR)) %>%
filter(TRIMESTER == max(TRIMESTER))
